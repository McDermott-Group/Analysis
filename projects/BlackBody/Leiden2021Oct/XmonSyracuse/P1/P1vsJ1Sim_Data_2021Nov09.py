"""
P1 for Q3, Q2, Q4 at different J8 Bias with Sim
Data:
Z:\mcdermott-group\data\Antenna\SUXmon\Liu\VitoChip1\2021Nov08_Q3_PSD_J1Radiator\P1_J1Slow_Q3\MATLABData
"""
import noiselib
import matplotlib.pyplot as plt
import numpy as np


Q3 = np.array([
 [0.1, 0.07406, 0.01311], [0.105, 0.07477, 0.01285], [0.11, 0.07365, 0.01364],
 [0.115, 0.07605, 0.01122], [0.12, 0.07542, 0.01349], [0.125, 0.07383, 0.01111],
 [0.13, 0.07497, 0.01083], [0.135, 0.07405, 0.01117], [0.14,0.07513, 0.01368],
 [0.145, 0.07352, 0.01309], [0.15, 0.07332, 0.01064], [0.155, 0.07414, 0.00926],
 [0.16, 0.07319, 0.01032], [0.165, 0.07691, 0.01231], [0.17, 0.07501, 0.01139],
 [0.175, 0.07462, 0.01046], [0.18, 0.07408, 0.01168], [0.185, 0.07546, 0.01312],
 [0.19, 0.07472, 0.00876], [0.195, 0.07468, 0.01209], [0.2, 0.07722, 0.01063],
 [0.205, 0.07608, 0.01035], [0.21, 0.07557, 0.01124], [0.215, 0.07554, 0.01093],
 [0.22, 0.07505, 0.01308], [0.225, 0.07532, 0.01203], [0.23, 0.07642, 0.01169],
 [0.235, 0.07498, 0.01031], [0.24, 0.07393, 0.01117], [0.245, 0.07494, 0.0108],
 [0.25, 0.07486, 0.01163], [0.255, 0.07544, 0.01113], [0.26, 0.07311, 0.01097],
 [0.265, 0.0767, 0.01265], [0.27, 0.07514, 0.01298], [0.275, 0.07604, 0.01169],
 [0.28, 0.0756, 0.0118], [0.285, 0.0726, 0.00985], [0.29, 0.07241, 0.01166],
 [0.295, 0.07663, 0.01172], [0.3, 0.07393, 0.00963], [0.305, 0.07165, 0.01054],
 [0.31, 0.07664, 0.01152], [0.315, 0.07683, 0.01071], [0.32, 0.07405, 0.01069],
 [0.325, 0.07398, 0.01154], [0.33, 0.07366, 0.0118], [0.335, 0.07323, 0.01048],
 [0.34, 0.07279, 0.01192], [0.345, 0.07456, 0.01289], [0.35, 0.07507, 0.0101],
 [0.355, 0.07366, 0.01192], [0.36, 0.07344, 0.01018], [0.365, 0.07246, 0.00913],
 [0.37, 0.07541, 0.01055], [0.375, 0.07313, 0.01135], [0.38, 0.07419, 0.01098],
 [0.385, 0.07586, 0.01169], [0.39, 0.07433, 0.01075], [0.395, 0.07382, 0.0128],
 [0.4, 0.07514, 0.01173]
])
### J6 Bias Conversion
Q3[:, 0] = (Q3[:, 0])*1000


# f = 4.604
f = 0.97
# f = 1
Al_gap = 380e-6
DAC_Al = 1e5*Al_gap/0.200
plt.errorbar(Q3[:, 0]*f, Q3[:, 1], yerr=Q3[:, 2]/np.sqrt(50), color='b', label='Q3')

plt.axvline(x=DAC_Al * f, color='k', linestyle='--', linewidth=4, label='JJ Al Gap')

plt.xlabel('Radiator Josephson Frequency (GHz)')
plt.ylabel('P1')
plt.yscale('log')
plt.grid()
plt.legend(loc=1)
# plt.xlim([0, 1500])
# plt.ylim([10, 100000])
plt.show()



