"""### To analyze the P1 vs Duration
### Z:\mcdermott-group\data\Antenna_Temporary\SUXmon\Liu\VitoChip1\P12021Oct29_Q2WithJ7_TimeDomain
remote chip poison
"""
import noiselib
import matplotlib.pyplot as plt
import numpy as np

Q2_0mDAC = np.array([
 [0.0, 0.00205, 0.00684], [2.0, 0.00223, 0.00583], [4.0, 0.00596, 0.0119],
 [6.0, 0.00258, 0.00805], [8.0, 0.00172, 0.00511], [10.0, 0.003, 0.00855],
 [12.0, 0.0035, 0.00727], [14.0, 0.00344, 0.0095], [16.0, 0.00381, 0.0091],
 [18.0, 0.00159, 0.0038], [20.0, 0.00157, 0.00516], [22.0, 0.00136, 0.00419],
 [24.0, 0.00159, 0.00561], [26.0, 0.00299, 0.00733], [28.0, 0.00399, 0.00869],
 [30.0, 0.00316, 0.00648], [32.0, 0.00448, 0.00891], [34.0, 0.00249, 0.00577],
 [36.0, 0.00247, 0.00606], [38.0, 0.00251, 0.00678], [40.0, 0.00271, 0.00651],
 [42.0, 0.00471, 0.0103], [44.0, 0.00206, 0.00491], [46.0, 0.00214, 0.00494],
 [48.0, 0.00495, 0.01188]
])

Q2_25mDAC = np.array([
 [0.0, 0.00772, 0.01205], [2.0, 0.00736, 0.01186], [4.0, 0.0072, 0.01334],
 [6.0, 0.01048, 0.01378], [8.0, 0.00674, 0.01037], [10.0, 0.00745, 0.00981],
 [12.0, 0.00838, 0.01149], [14.0, 0.00768, 0.01222], [16.0, 0.007, 0.00908],
 [18.0, 0.00609, 0.00999], [20.0, 0.00818, 0.01376], [22.0, 0.00856, 0.01082],
 [24.0, 0.00865, 0.01284], [26.0, 0.0081, 0.01416], [28.0, 0.00691, 0.01253],
 [30.0, 0.0086, 0.01196], [32.0, 0.00762, 0.01128], [34.0, 0.00706, 0.01152],
 [36.0, 0.00742, 0.01098], [38.0, 0.00763, 0.01226], [40.0, 0.00759, 0.00952],
 [42.0, 0.00658, 0.01135], [44.0, 0.00583, 0.0094], [46.0, 0.00736, 0.00975],
 [48.0, 0.00742, 0.00869]
])
Q2_30mDAC = np.array([
 [0.0, 0.01078, 0.01275], [2.0, 0.01036, 0.01392], [4.0, 0.00949, 0.01396],
 [6.0, 0.00695, 0.0106], [8.0, 0.00963, 0.01125], [10.0, 0.00763, 0.01088],
 [12.0, 0.00612, 0.01039], [14.0, 0.00741, 0.00976], [16.0, 0.0099, 0.0108],
 [18.0, 0.00884, 0.01269], [20.0, 0.00733, 0.00966], [22.0, 0.00654, 0.01081],
 [24.0, 0.00821, 0.0104], [26.0, 0.01056, 0.01202], [28.0, 0.00733, 0.01201],
 [30.0, 0.00644, 0.00982], [32.0, 0.00812, 0.01143], [34.0, 0.00685, 0.01064],
 [36.0, 0.00974, 0.01338], [38.0, 0.00525, 0.00814], [40.0, 0.00981, 0.01247],
 [42.0, 0.00815, 0.01249], [44.0, 0.00676, 0.00954], [46.0, 0.00681, 0.00902],
 [48.0, 0.00771, 0.01138]])
Q2_33mDAC = np.array([
 [0.0, 0.01003, 0.01157], [2.0, 0.01008, 0.01391], [4.0, 0.00877, 0.01221],
 [6.0, 0.00693, 0.0097], [8.0, 0.01099, 0.01677], [10.0, 0.00818, 0.01162],
 [12.0, 0.00901, 0.01344], [14.0, 0.00778, 0.01088], [16.0, 0.00651, 0.01103],
 [18.0, 0.01193, 0.0144], [20.0, 0.00958, 0.01262], [22.0, 0.01082, 0.01316],
 [24.0, 0.00754, 0.01029], [26.0, 0.00947, 0.01263], [28.0, 0.00793, 0.01075],
 [30.0, 0.00814, 0.01108], [32.0, 0.00899, 0.01521], [34.0, 0.00774, 0.01166],
 [36.0, 0.00906, 0.01132], [38.0, 0.0077, 0.01105], [40.0, 0.00587, 0.00917],
 [42.0, 0.00549, 0.00895], [44.0, 0.00772, 0.01054], [46.0, 0.00708, 0.011],
 [48.0, 0.00901, 0.01237]
])
Q2_52mDAC = np.array([
 [0.0, 0.02415, 0.01966], [2.0, 0.01861, 0.01397], [4.0, 0.01755, 0.01555],
 [6.0, 0.0176, 0.01392], [8.0, 0.01488, 0.01509], [10.0, 0.01134, 0.01275],
 [12.0, 0.00957, 0.01275], [14.0, 0.01439, 0.01356], [16.0, 0.01124, 0.01357],
 [18.0, 0.01018, 0.01156], [20.0, 0.00838, 0.01249], [22.0, 0.01092, 0.01597],
 [24.0, 0.01431, 0.01427], [26.0, 0.00752, 0.00933], [28.0, 0.01064, 0.01421],
 [30.0, 0.00797, 0.00974], [32.0, 0.0109, 0.01277], [34.0, 0.00995, 0.01166],
 [36.0, 0.00913, 0.01147], [38.0, 0.00786, 0.01044], [40.0, 0.0075, 0.00908],
 [42.0, 0.00865, 0.01221], [44.0, 0.00789, 0.01021], [46.0, 0.01055, 0.01588],
 [48.0, 0.00781, 0.0127]
])
Q2_53mDAC = np.array([
 [0.0, 0.0129, 0.01406], [2.0, 0.01108, 0.01264], [4.0, 0.008, 0.01132],
 [6.0, 0.00886, 0.01031], [8.0, 0.00921, 0.01198], [10.0, 0.00958, 0.01074],
 [12.0, 0.0066, 0.01176], [14.0, 0.00721, 0.00972], [16.0, 0.00819, 0.01267],
 [18.0, 0.00737, 0.01031], [20.0, 0.00692, 0.01385], [22.0, 0.00365, 0.00657],
 [24.0,0.00659, 0.01272], [26.0, 0.00692, 0.01313], [28.0, 0.00679, 0.01149],
 [30.0, 0.00364, 0.00753], [32.0, 0.00806, 0.0115], [34.0, 0.00729, 0.00973],
 [36.0, 0.00626, 0.01114], [38.0, 0.00546, 0.00928], [40.0, 0.00511, 0.00821],
 [42.0, 0.00885, 0.01239], [44.0, 0.00676, 0.01071], [46.0, 0.0084, 0.01264],
 [48.0, 0.00727, 0.01049]
])
Q2_57mDAC = np.array([
 [0.0, 0.0193, 0.01441], [2.0, 0.01334, 0.01519], [4.0, 0.01146, 0.01522],
 [6.0, 0.00952, 0.01146], [8.0, 0.00864, 0.01208], [10.0, 0.0081, 0.0127],
 [12.0, 0.00971, 0.01179], [14.0, 0.00863, 0.01298], [16.0, 0.00547, 0.01055],
 [18.0, 0.00833, 0.01255], [20.0, 0.00863, 0.01237], [22.0, 0.0065, 0.01228],
 [24.0, 0.00707, 0.00873], [26.0, 0.00561, 0.01021], [28.0, 0.00706, 0.00934],
 [30.0, 0.00678, 0.0106], [32.0, 0.00695, 0.01242], [34.0, 0.00545, 0.00911],
 [36.0, 0.00635, 0.00778], [38.0, 0.00687, 0.00892], [40.0, 0.00941, 0.01204],
 [42.0, 0.0064, 0.01271], [44.0, 0.0043, 0.00709], [46.0, 0.0038, 0.0077],
 [48.0, 0.00856, 0.01147]
])
Q2_64mDAC = np.array([
 [0.0, 0.00749, 0.01044], [2.0, 0.00559, 0.00979], [4.0, 0.00537, 0.00767],
 [6.0, 0.00632, 0.01123], [8.0, 0.00626, 0.00924], [10.0, 0.00624, 0.01325],
 [12.0, 0.00514, 0.00826], [14.0, 0.00223, 0.00467], [16.0, 0.0074, 0.01143],
 [18.0, 0.00853, 0.01171], [20.0, 0.00752, 0.01217], [22.0, 0.00409, 0.00991],
 [24.0, 0.00591, 0.01006], [26.0, 0.0051, 0.0085], [28.0, 0.00569, 0.00874],
 [30.0, 0.00879, 0.01125], [32.0, 0.00386, 0.00627], [34.0, 0.00644, 0.01074],
 [36.0, 0.0093, 0.01454], [38.0, 0.00444, 0.00899], [40.0, 0.00481, 0.00918],
 [42.0, 0.00677, 0.01186], [44.0, 0.00788, 0.01252], [46.0, 0.00623, 0.01231],
 [48.0, 0.00607, 0.01168]
])
Q2_150mDAC = np.array([
 [0.0, 0.00904, 0.01228], [2.0, 0.00806, 0.01216], [4.0, 0.00638, 0.00976],
 [6.0, 0.00764, 0.0114], [8.0, 0.00751, 0.01037], [10.0, 0.00605, 0.00932],
 [12.0, 0.00725, 0.01257], [14.0, 0.00433, 0.01015], [16.0, 0.00321, 0.00727],
 [18.0, 0.00362, 0.0069], [20.0, 0.0054, 0.01068], [22.0, 0.00546, 0.01024],
 [24.0, 0.00591, 0.01114], [26.0, 0.00567, 0.00976], [28.0, 0.00415, 0.00797],
 [30.0, 0.00492, 0.00913], [32.0, 0.00398, 0.00776], [34.0, 0.00416, 0.00715],
 [36.0, 0.00553, 0.01307], [38.0, 0.00694, 0.01065], [40.0, 0.00436, 0.00978],
 [42.0, 0.00432, 0.00781], [44.0, 0.00426, 0.00942], [46.0, 0.00518, 0.01046],
 [48.0, 0.00631, 0.01175]
])
Q2_300mDAC = np.array([
 [0.0, 0.03323, 0.01539], [2.0, 0.03134, 0.01624], [4.0, 0.02423, 0.01422],
 [6.0, 0.02125, 0.01584], [8.0, 0.0174, 0.01431], [10.0, 0.01649, 0.01321],
 [12.0, 0.0155, 0.01374], [14.0, 0.01534, 0.01394], [16.0, 0.01387, 0.01477],
 [18.0, 0.01091, 0.01191], [20.0, 0.01254, 0.01336], [22.0, 0.01162, 0.01138],
 [24.0, 0.01274, 0.01377], [26.0, 0.00827, 0.00815], [28.0, 0.00871, 0.01051],
 [30.0, 0.00814, 0.01155], [32.0, 0.00899, 0.011], [34.0, 0.00993, 0.01193],
 [36.0, 0.01334, 0.01448], [38.0, 0.00803, 0.01112], [40.0, 0.01153, 0.01606],
 [42.0, 0.00809, 0.01054], [44.0, 0.00895, 0.0119], [46.0, 0.00645, 0.00919],
 [48.0, 0.00697, 0.00874]
])
Q2_500mDAC = np.array([
 [0.0, 0.04038, 0.01773], [2.0, 0.03283, 0.01813], [4.0, 0.01822, 0.01444],
 [6.0, 0.01216, 0.01355], [8.0, 0.00974, 0.0113], [10.0, 0.00788, 0.01166],
 [12.0, 0.00743, 0.00883], [14.0, 0.00596, 0.00846], [16.0, 0.00604, 0.01048],
 [18.0, 0.00703, 0.01231], [20.0, 0.00651, 0.01151], [22.0, 0.00758, 0.01079],
 [24.0, 0.00583, 0.01085], [26.0, 0.00687, 0.01271], [28.0, 0.00587, 0.01121],
 [30.0, 0.0083, 0.01347], [32.0, 0.00539, 0.00871], [34.0, 0.00666, 0.01177],
 [36.0, 0.00711, 0.01191], [38.0, 0.003, 0.00525], [40.0, 0.00529, 0.01018],
 [42.0, 0.00528, 0.01095], [44.0, 0.00582, 0.00949], [46.0, 0.00395, 0.00708],
 [48.0, 0.00562, 0.01169]
])

Q2_25mDACLong = np.array([
 [0.0, 0.00112, 0.00285], [20.0, 0.00627, 0.00989], [40.0, 0.00039, 0.00153],
 [60.0, 0.00517, 0.00815], [80.0, 0.00198, 0.00521], [100.0, 0.00247, 0.00934],
 [120.0, 0.00591, 0.01284], [140.0, 0.0062, 0.01328], [160.0, 0.00109, 0.00253],
 [180.0, 0.00406, 0.00603], [200.0, 0.00452, 0.00718], [220.0, 0.00409, 0.0099],
 [240.0, 0.00955, 0.01361], [260.0, 0.00491, 0.01082], [280.0, 0.00452, 0.01104],
 [300.0, 0.00526, 0.00928], [320.0, 0.00233, 0.00443]
])
Q2_53mDACLong = np.array([
 [0.0, 0.01092, 0.01194], [20.0, 0.00817, 0.01117], [40.0, 0.00839, 0.00968],
 [60.0, 0.01262, 0.01506], [80.0, 0.01242, 0.01728], [100.0, 0.01138, 0.01594],
 [120.0, 0.00595, 0.00968], [140.0, 0.00632, 0.01099], [160.0, 0.00724, 0.00906],
 [180.0, 0.00508, 0.00842], [200.0, 0.00628, 0.00813], [220.0, 0.00748, 0.00832],
 [240.0, 0.005, 0.00958], [260.0, 0.01188, 0.0153], [280.0, 0.00517, 0.01248],
 [300.0, 0.00471, 0.00812], [320.0, 0.00954, 0.01154]
])
Q2_57mDACLong = np.array([
 [0.0, 0.01081, 0.01244], [20.0, 0.00584, 0.00937], [40.0, 0.00399, 0.00858],
 [60.0, 0.00221, 0.00521], [80.0, 0.00627, 0.01189], [100.0, 0.0069, 0.01006],
 [120.0, 0.00385, 0.00722], [140.0, 0.00218, 0.00439], [160.0, 0.00502, 0.0105],
 [180.0, 0.00103, 0.00422], [200.0, 0.00405, 0.00807], [220.0, 0.0031, 0.00589],
 [240.0, 0.00467, 0.00884], [260.0, 0.00807, 0.01392], [280.0, 0.00697, 0.01077],
 [300.0, 0.00259, 0.00616], [320.0, 0.00568, 0.00921]
])
Q2_64mDACLong = np.array([
 [0.0, 0.0093, 0.01021], [20.0, 0.00354, 0.00822], [40.0, 0.00865, 0.01243],
 [60.0, 0.00691, 0.01468], [80.0, 0.00694, 0.01048], [100.0, 0.0049, 0.0107],
 [120.0, 0.00428, 0.01038], [140.0, 0.00585, 0.00889], [160.0, 0.00823, 0.01281],
 [180.0, 0.00362, 0.00724], [200.0, 0.00546, 0.01204], [220.0, 0.01009, 0.0115],
 [240.0, 0.01017, 0.01292], [260.0, 0.00587, 0.00976], [280.0, 0.0068, 0.01159],
 [300.0, 0.00963, 0.01208], [320.0, 0.00432, 0.01055]
])
Q2_300mDACLong = np.array([
 [0.0, 0.03024, 0.01295], [20.0, 0.01744, 0.01853], [40.0, 0.00758, 0.00869],
 [60.0, 0.00617, 0.00875], [80.0, 0.00947, 0.01303], [100.0, 0.00937, 0.01346],
 [120.0, 0.00759, 0.0098], [140.0, 0.01303, 0.01442], [160.0, 0.0105, 0.01286],
 [180.0, 0.0072, 0.01147], [200.0, 0.01548, 0.01408], [220.0, 0.00837, 0.01045],
 [240.0, 0.00956, 0.01144], [260.0, 0.00752, 0.00918], [280.0, 0.00626, 0.00787],
 [300.0, 0.0071, 0.00946], [320.0, 0.00716, 0.0099]
])
Q2_500mDACLong = np.array([
 [0.0, 0.03452, 0.01376], [20.0, 0.00782, 0.01249], [40.0, 0.00269, 0.00595],
 [60.0, 0.00466, 0.00814], [80.0, 0.00246, 0.00549], [100.0, 0.00507, 0.01487],
 [120.0, 0.00481, 0.00856], [140.0, 0.00776, 0.01199], [160.0, 0.00273, 0.00582],
 [180.0, 0.00194, 0.00356], [200.0, 0.00656, 0.0103], [220.0, 0.00207, 0.00429],
 [240.0, 0.00411, 0.00958], [260.0, 0.00241, 0.00859], [280.0, 0.00355, 0.00516],
 [300.0, 0.00454, 0.00854], [320.0, 0.0037, 0.00716]
])

### J7 Bias Conversion

# plt.errorbar(Q2_22mDAC[:, 0], Q2_22mDAC[:, 1], yerr=Q2_22mDAC[:, 2]/np.sqrt(5), label='Q2_22mDAC')
# # plt.errorbar(Q2_32mDAC[:, 0], Q2_32mDAC[:, 1], yerr=Q2_32mDAC[:, 2]/np.sqrt(5), label='Q2_32mDAC')
# plt.errorbar(Q2_56mDAC[:, 0], Q2_56mDAC[:, 1], yerr=Q2_56mDAC[:, 2]/np.sqrt(5), label='Q2_56mDAC')
# plt.errorbar(Q2_100mDAC[:, 0], Q2_100mDAC[:, 1], yerr=Q2_100mDAC[:, 2]/np.sqrt(5), linestyle='--', label='Q2_100mDAC')
# plt.errorbar(Q2_300mDAC[:, 0], Q2_300mDAC[:, 1], yerr=Q2_300mDAC[:, 2]/np.sqrt(5), linestyle='--', label='Q2_300mDAC')

# plt.plot(Q2_0mDAC[:, 0], Q2_0mDAC[:, 1], '--', label='Q2_0mDAC_{}GHz'.format(0*4.6))
# plt.plot(Q2_25mDAC[:, 0], Q2_25mDAC[:, 1], 'o-', label='Q2_25mDAC_{}GHz'.format(25*4.6))
# plt.plot(Q2_30mDAC[:, 0], Q2_30mDAC[:, 1], 'd-', label='Q2_30mDAC_{}GHz'.format(30*4.6))
# plt.plot(Q2_33mDAC[:, 0], Q2_33mDAC[:, 1], 's-',  label='Q2_33mDAC_{}GHz'.format(33*4.6))
# plt.plot(Q2_52mDAC[:, 0], Q2_52mDAC[:, 1], '*-', label='Q2_52mDAC_{}GHz'.format(52*4.6))
# plt.plot(Q2_53mDAC[:, 0], Q2_53mDAC[:, 1], 's-', label='Q2_53mDAC_{}GHz'.format(53*4.6))
# plt.plot(Q2_57mDAC[:, 0], Q2_57mDAC[:, 1], 'o-', label='Q2_57mDAC_{}GHz'.format(57*4.6))
# plt.plot(Q2_64mDAC[:, 0], Q2_64mDAC[:, 1], 'd-', label='Q2_64mDAC_{}GHz'.format(64*4.6))
# plt.plot(Q2_150mDAC[:, 0], Q2_150mDAC[:, 1], 's-', label='Q2_150mDAC_{}GHz'.format(150*4.6))
# plt.plot(Q2_300mDAC[:, 0], Q2_300mDAC[:, 1], '*-', label='Q2_300mDAC_{}GHz'.format(300*4.6))
# plt.plot(Q2_500mDAC[:, 0], Q2_500mDAC[:, 1], '--', label='Q2_500mDAC_{}GHz'.format(500*4.6))

plt.plot(Q2_25mDACLong[:, 0], Q2_25mDACLong[:, 1], 'o-', label='Q2_25mDACLong_{}GHz'.format(25*4.6))
plt.plot(Q2_53mDACLong[:, 0], Q2_53mDACLong[:, 1], 's-', label='Q2_53mDACLong_{}GHz'.format(53*4.6))
plt.plot(Q2_57mDACLong[:, 0], Q2_57mDACLong[:, 1], 'o-', label='Q2_57mDACLong_{}GHz'.format(57*4.6))
plt.plot(Q2_64mDACLong[:, 0], Q2_64mDACLong[:, 1], 'd-', label='Q2_64mDACLong_{}GHz'.format(64*4.6))
plt.plot(Q2_300mDACLong[:, 0], Q2_300mDACLong[:, 1], '*-', label='Q2_300mDACLong_{}GHz'.format(300*4.6))
plt.plot(Q2_500mDACLong[:, 0], Q2_500mDACLong[:, 1], '--', label='Q2_500mDACLong_{}GHz'.format(500*4.6))


# plt.errorbar(Q4_22mDAC[:, 0], Q4_22mDAC[:, 1], yerr=Q4_22mDAC[:, 2]/np.sqrt(5), label='Q4_22mDAC')
# # # plt.errorbar(Q4_32mDAC[:, 0], Q4_32mDAC[:, 1], yerr=Q4_32mDAC[:, 2]/np.sqrt(5), label='Q4_32mDAC')
# plt.errorbar(Q4_56mDAC[:, 0], Q4_56mDAC[:, 1], yerr=Q4_56mDAC[:, 2]/np.sqrt(5), label='Q4_56mDAC')
# plt.errorbar(Q4_100mDAC[:, 0], Q4_100mDAC[:, 1], yerr=Q4_100mDAC[:, 2]/np.sqrt(5), linestyle='--', label='Q4_100mDAC')
# plt.errorbar(Q4_300mDAC[:, 0], Q4_300mDAC[:, 1], yerr=Q4_300mDAC[:, 2]/np.sqrt(5), linestyle='--', label='Q4_300mDAC')

# plt.axvline(x=DAC_Al * f, color='k', linestyle='--', linewidth=4, label='JJ Al Gap')

# plt.xlabel('Radiator Josephson Frequency (GHz)')
plt.xlabel('Josephson Bias Idle time (us)')
plt.ylabel('P1')
# plt.yscale('log')
plt.grid()
plt.legend(loc=1)
# plt.xlim([0, 1500])
plt.ylim([0, 0.045])
plt.show()



