"""
P1 for Q1, Q2, Q3 at different J1 Bias
Data:
Z:\mcdermott-group\data\Antenna_Temporary\SUXmon2\Liu\VitoChip2\11-02-21

"""
import noiselib
import matplotlib.pyplot as plt
import numpy as np


Q1 = np.array(
    [
        [0.0, 0.01756, 0.00647],
        [0.002, 0.01914, 0.00984],
        [0.004, 0.02124, 0.01355],
        [0.006, 0.01839, 0.01132],
        [0.008, 0.02155, 0.01332],
        [0.01, 0.01829, 0.0044],
        [0.012, 0.01912, 0.00993],
        [0.014, 0.01923, 0.01195],
        [0.016, 0.02284, 0.00618],
        [0.018, 0.01985, 0.0147],
        [0.02, 0.02654, 0.00876],
        [0.022, 0.02242, 0.01196],
        [0.024, 0.01743, 0.00776],
        [0.026, 0.02381, 0.01042],
        [0.028, 0.01565, 0.00724],
        [0.03, 0.02295, 0.01704],
        [0.032, 0.01873, 0.01198],
        [0.034, 0.02368, 0.00944],
        [0.036, 0.0222, 0.01118],
        [0.038, 0.01526, 0.00582],
        [0.04, 0.01499, 0.00505],
        [0.042, 0.02081, 0.01577],
        [0.044, 0.0207, 0.00817],
        [0.046, 0.02019, 0.01131],
        [0.048, 0.02072, 0.00957],
        [0.05, 0.02089, 0.00986],
        [0.052, 0.02247, 0.00772],
        [0.054, 0.01975, 0.00405],
        [0.056, 0.02735, 0.00592],
        [0.058, 0.02661, 0.01142],
        [0.06, 0.02359, 0.01196],
        [0.062, 0.02562, 0.01256],
        [0.064, 0.01915, 0.01189],
        [0.066, 0.02581, 0.0127],
        [0.068, 0.02814, 0.00963],
        [0.07, 0.02027, 0.00666],
        [0.072, 0.02525, 0.01679],
        [0.074, 0.02016, 0.00827],
        [0.076, 0.01978, 0.01166],
        [0.078, 0.02578, 0.01514],
        [0.08, 0.02146, 0.01213],
        [0.082, 0.02244, 0.00708],
        [0.084, 0.02033, 0.0092],
        [0.086, 0.01943, 0.0116],
        [0.088, 0.02225, 0.01186],
        [0.09, 0.02399, 0.00948],
        [0.092, 0.02367, 0.01002],
        [0.094, 0.02202, 0.00982],
        [0.096, 0.02423, 0.00886],
        [0.098, 0.02379, 0.01004],
        [0.1, 0.01214, 0.00702],
        [0.102, 0.01694, 0.01027],
        [0.104, 0.02204, 0.01357],
        [0.106, 0.01845, 0.01247],
        [0.108, 0.02558, 0.00586],
        [0.11, 0.01704, 0.00752],
        [0.112, 0.01746, 0.01011],
        [0.114, 0.02452, 0.01233],
        [0.116, 0.02378, 0.01136],
        [0.118, 0.01938, 0.01182],
        [0.12, 0.01373, 0.00851],
        [0.122, 0.02737, 0.01868],
        [0.124, 0.01608, 0.00906],
        [0.126, 0.0238, 0.00959],
        [0.128, 0.02904, 0.01784],
        [0.13, 0.01312, 0.00854],
        [0.132, 0.02556, 0.00421],
        [0.134, 0.02081, 0.00857],
        [0.136, 0.02685, 0.01302],
        [0.138, 0.02674, 0.01716],
        [0.14, 0.01893, 0.00861],
        [0.142, 0.02248, 0.01025],
        [0.144, 0.02383, 0.00341],
        [0.146, 0.01849, 0.00865],
        [0.148, 0.02363, 0.01338],
        [0.15, 0.02441, 0.01095],
        [0.152, 0.03223, 0.01681],
        [0.154, 0.02319, 0.00604],
        [0.156, 0.02598, 0.00752],
        [0.158, 0.016, 0.01396],
        [0.16, 0.0216, 0.00701],
        [0.162, 0.03199, 0.01423],
        [0.164, 0.03877, 0.02587],
        [0.166, 0.0225, 0.01038],
        [0.168, 0.02635, 0.00718],
        [0.17, 0.02051, 0.00589],
        [0.172, 0.03203, 0.01125],
        [0.174, 0.02582, 0.00554],
        [0.176, 0.02395, 0.00737],
        [0.178, 0.01899, 0.0084],
        [0.18, 0.03164, 0.00613],
        [0.182, 0.02045, 0.00162],
        [0.184, 0.02911, 0.00493],
        [0.186, 0.02515, 0.00483],
        [0.188, 0.02539, 0.00743],
        [0.19, 0.03155, 0.00311],
        [0.192, 0.02579, 0.00326],
        [0.194, 0.02959, 0.01031],
        [0.196, 0.03489, 0.00886],
        [0.198, 0.02789, 0.00917],
    ]
)
Q4 = np.array([
 [0.0, 0.02879, 0.00755], [0.002, 0.02535, 0.0042], [0.004, 0.02434, 0.00664],
 [0.006, 0.02939, 0.00469], [0.008, 0.02532, 0.00316], [0.01, 0.02515, 0.00799],
 [0.012, 0.03206, 0.00601], [0.014, 0.03234, 0.00747], [0.016, 0.02871, 0.00699],
 [0.018, 0.03026, 0.00487], [0.02, 0.02896, 0.00614], [0.022, 0.03336, 0.00783],
 [0.024, 0.03247, 0.00649], [0.026, 0.03301, 0.003], [0.028, 0.03477, 0.00574],
 [0.03, 0.03793, 0.00676], [0.032, 0.03146, 0.0052], [0.034,0.03775, 0.00611],
 [0.036, 0.03744, 0.00627], [0.038, 0.04059, 0.00428], [0.04, 0.04113, 0.00454],
 [0.042, 0.0337, 0.00722], [0.044, 0.03857, 0.00779], [0.046, 0.03616, 0.00645],
 [0.048, 0.03563, 0.00816], [0.05, 0.03653, 0.00582], [0.052, 0.03782, 0.00706],
 [0.054, 0.03635, 0.00606], [0.056, 0.03422, 0.00533], [0.058, 0.03525, 0.00671],
 [0.06, 0.03549, 0.00593], [0.062, 0.03771, 0.00628], [0.064, 0.03559, 0.00689],
 [0.066, 0.03377, 0.00678], [0.068, 0.03176, 0.00548], [0.07, 0.03558, 0.00323],
 [0.072, 0.03764, 0.00828], [0.074, 0.03537, 0.00593], [0.076, 0.03733, 0.00428],
 [0.078, 0.03364, 0.00624], [0.08, 0.03194, 0.00541], [0.082, 0.03384, 0.00678],
 [0.084, 0.03356, 0.00537], [0.086, 0.03348, 0.0053], [0.088, 0.0334, 0.0069],
 [0.09, 0.03509, 0.01119], [0.092, 0.03073, 0.00663], [0.094, 0.0277, 0.00366],
 [0.096, 0.02908, 0.0056], [0.098, 0.03226, 0.00685], [0.1, 0.03537, 0.01029],
 [0.102, 0.03092, 0.00359], [0.104, 0.02897, 0.00312], [0.106, 0.0317, 0.00436],
 [0.108, 0.03523, 0.0049], [0.11, 0.02789, 0.00357], [0.112, 0.0342, 0.00621],
 [0.114, 0.03276, 0.00653], [0.116, 0.02868, 0.00597], [0.118, 0.02967, 0.00715],
 [0.12, 0.02633, 0.00288], [0.122, 0.03479, 0.0103], [0.124, 0.02797, 0.00495],
 [0.126, 0.02553, 0.00409], [0.128, 0.02456, 0.00398], [0.13, 0.02359, 0.00611],
 [0.132, 0.02751, 0.00776], [0.134, 0.02929, 0.00898], [0.136, 0.03009, 0.00524],
 [0.138, 0.025, 0.0058], [0.14, 0.02817, 0.00619], [0.142, 0.03145, 0.00356],
 [0.144, 0.02888, 0.0072], [0.146, 0.02345, 0.00625], [0.148, 0.02403, 0.00748],
 [0.15, 0.02615, 0.00595], [0.152, 0.02267, 0.00125], [0.154, 0.02321, 0.00754],
 [0.156, 0.0268, 0.00761], [0.158, 0.02704, 0.00563], [0.16, 0.02558, 0.0041],
 [0.162, 0.02758, 0.00616], [0.164, 0.02686, 0.00261], [0.166, 0.02554, 0.00556],
 [0.168, 0.03194, 0.00592], [0.17, 0.02617, 0.0055], [0.172, 0.02352, 0.0042],
 [0.174, 0.02277, 0.00531], [0.176, 0.02585, 0.003], [0.178, 0.02276, 0.00369],
 [0.18, 0.02533, 0.00407], [0.182, 0.02334, 0.00759], [0.184, 0.02239, 0.00283],
 [0.186, 0.02463, 0.00232], [0.188, 0.02525, 0.0032], [0.19, 0.02957, 0.0038],
 [0.192, 0.02544, 0.00478], [0.194, 0.02761, 0.00809], [0.196, 0.02574, 0.00298],
 [0.198, 0.02256, 0.00343]
])

### J7 Bias Conversion
Q1[:, 0] = (Q1[:, 0])*1000
Q2[:, 0] = (Q2[:, 0])*1000
Q3[:, 0] = (Q3[:, 0])*1000


# f = 4.604
f = 1
Al_gap = 380e-6
DAC_Al = 1e5*Al_gap/0.952
plt.errorbar(Q1[:, 0]*f, Q1[:, 1], yerr=Q1[:, 2]/np.sqrt(10), color='b', label='Q1')
plt.errorbar(Q2[:, 0]*f, Q2[:, 1], yerr=Q2[:, 2]/np.sqrt(10), color='r', label='Q2')
# plt.errorbar(Q3[:, 0]*f, Q3[:, 1], yerr=Q3[:, 2]/np.sqrt(10), color='y', label='Q3')

# plt.axvline(x=DAC_Al * f, color='k', linestyle='--', linewidth=4, label='JJ Al Gap')

# plt.xlabel('Radiator Josephson Frequency (GHz)')
plt.xlabel('Radiator Josephson Bias (mDAC)')
plt.ylabel('P1')
plt.yscale('log')
plt.grid()
plt.legend(loc=1)
# plt.xlim([0, 1500])
# plt.ylim([10, 100000])
plt.show()



