"""
P1 for Q1, Q2, Q3 at different J7 Bias
Data:
Z:\mcdermott-group\data\Antenna\SUXmon2\Liu\VitoChip2\10-27-21

"""
import noiselib
import matplotlib.pyplot as plt
import numpy as np


Q1 = np.array([
 [-0.09, 0.02192, 0.00723], [-0.0875, 0.02256, 0.0096], [-0.0849, 0.02235, 0.00725],
 [-0.0824, 0.02778, 0.01193], [-0.0799, 0.01644, 0.00768], [-0.0774, 0.02261, 0.00822],
 [-0.0749, 0.02391, 0.00562], [-0.0724, 0.02087, 0.00741], [-0.0699, 0.02175, 0.00599],
 [-0.0674, 0.01926, 0.00473], [-0.0649, 0.02703, 0.0108], [-0.0624, 0.01959,0.00802],
 [-0.0599, 0.02104, 0.00904], [-0.0574, 0.02473, 0.01245], [-0.0549, 0.02697,0.00925],
 [-0.0524, 0.02369, 0.00685], [-0.0499, 0.0245, 0.00937], [-0.0474, 0.02997, 0.00415],
 [-0.0449, 0.028, 0.00869], [-0.0424, 0.02776, 0.00706], [-0.0399, 0.02282, 0.00871],
 [-0.0374, 0.02493, 0.0106], [-0.0349, 0.02277, 0.01053], [-0.0324, 0.02142, 0.00732],
 [-0.0299, 0.01838, 0.01163], [-0.0274, 0.02383, 0.01135], [-0.0249, 0.0164, 0.01237],
 [-0.0224, 0.02192, 0.00723], [-0.0199, 0.01828, 0.00799], [-0.0174, 0.02603, 0.01003],
 [-0.0149, 0.01744, 0.01014], [-0.0124, 0.01607, 0.00892], [-0.0099, 0.01785, 0.01335],
 [-0.0074, 0.01981, 0.0071], [-0.0049, 0.0174, 0.00818], [-0.0024, 0.01803, 0.00863],
 [0.0, 0.02111, 0.0067], [0.0025, 0.02872, 0.0199], [0.005, 0.01505, 0.01006],
 [0.0075, 0.01946, 0.01116], [0.01, 0.01819, 0.00997], [0.0125, 0.02008, 0.00771],
 [0.015, 0.02105, 0.00911], [0.0175, 0.01996, 0.00744], [0.02, 0.019, 0.01067],
 [0.0225, 0.01913, 0.01302], [0.025, 0.02227, 0.00944], [0.0275, 0.01513, 0.00912],
 [0.03, 0.02453, 0.0049], [0.0325, 0.01993, 0.00827], [0.035, 0.01352, 0.00989],
 [0.0375, 0.01543, 0.00942], [0.04, 0.02388, 0.01262], [0.0425, 0.02005, 0.00957],
 [0.045, 0.01863, 0.0181], [0.0475,0.01436, 0.00519], [0.05, 0.01957, 0.0095],
 [0.0525, 0.01591, 0.0091], [0.055, 0.02912, 0.01183], [0.0575, 0.01792, 0.00745],
 [0.06, 0.02409, 0.01238], [0.0625, 0.01936, 0.00946], [0.065, 0.01883, 0.00977],
 [0.0675, 0.02829, 0.00571], [0.07, 0.02063, 0.00522], [0.0725, 0.02291, 0.00703],
 [0.075, 0.02388, 0.01012], [0.0775, 0.02631, 0.01418], [0.08, 0.02087, 0.00687],
 [0.0825, 0.02871, 0.00835], [0.085, 0.02362, 0.01009], [0.0875, 0.02099, 0.01118]
])

Q2 = np.array([
 [-0.09, 0.02259, 0.00708], [-0.0875, 0.01945, 0.0065], [-0.0849, 0.01982, 0.00677],
 [-0.0824, 0.02454, 0.01297], [-0.0799, 0.02281, 0.00401], [-0.0774, 0.01885, 0.00528],
 [-0.0749, 0.01614, 0.00451], [-0.0724, 0.02149, 0.00646], [-0.0699, 0.01859, 0.00435],
 [-0.0674, 0.02154, 0.00534], [-0.0649, 0.01727, 0.00489], [-0.0624, 0.02169, 0.00712],
 [-0.0599, 0.02312, 0.00385], [-0.0574, 0.02159, 0.00412], [-0.0549, 0.02078, 0.00406],
 [-0.0524, 0.02352, 0.00762], [-0.0499, 0.01993, 0.00438], [-0.0474, 0.02457, 0.00645],
 [-0.0449, 0.03361, 0.0048], [-0.0424, 0.02337, 0.00545], [-0.0399, 0.02332,0.00529],
 [-0.0374, 0.02231, 0.00673], [-0.0349, 0.01943, 0.00442], [-0.0324, 0.0198, 0.00314],
 [-0.0299, 0.01809, 0.00556], [-0.0274, 0.02181, 0.00617], [-0.0249, 0.0197, 0.00541],
 [-0.0224, 0.01907, 0.00665], [-0.0199, 0.01855, 0.00506], [-0.0174, 0.01972, 0.00697],
 [-0.0149, 0.01888, 0.00807], [-0.0124, 0.01997, 0.00794], [-0.0099, 0.01579, 0.00473],
 [-0.0074, 0.01578, 0.00521], [-0.0049, 0.01452, 0.00432], [-0.0024, 0.01262, 0.00341],
 [0.0, 0.01553, 0.00497], [0.0025, 0.01544, 0.00581], [0.005, 0.01791, 0.00845],
 [0.0075, 0.01132, 0.0056], [0.01, 0.01285, 0.00582], [0.0125, 0.01493, 0.00601],
 [0.015, 0.0166, 0.00606], [0.0175, 0.01643, 0.00812], [0.02, 0.01304, 0.00418],
 [0.0225, 0.01415, 0.00676], [0.025, 0.01443, 0.00342], [0.0275, 0.01776, 0.00799],
 [0.03, 0.01554,0.00504], [0.0325, 0.0166, 0.00548], [0.035, 0.01358, 0.00297],
 [0.0375, 0.01946, 0.00564], [0.04, 0.01647, 0.00293], [0.0425, 0.01787, 0.00472],
 [0.045, 0.01905, 0.00489], [0.0475, 0.01701, 0.00442], [0.05, 0.01729, 0.00439],
 [0.0525, 0.01818, 0.0045], [0.055, 0.01903, 0.00583], [0.0575, 0.02015, 0.00499],
 [0.06, 0.01791, 0.00423], [0.0625, 0.02167, 0.00391], [0.065, 0.01964, 0.00393],
 [0.0675, 0.0265, 0.00533], [0.07, 0.03149, 0.0078], [0.0725, 0.02966, 0.00368],
 [0.075, 0.02443, 0.00984], [0.0775, 0.02142, 0.00582], [0.08, 0.01857, 0.00453],
 [0.0825, 0.01752, 0.0043], [0.085, 0.01991, 0.00625], [0.0875, 0.01984, 0.00361]
])

Q3 = np.array([
 [-0.09, 0.21615, 0.01904], [-0.0875, 0.21202, 0.01927], [-0.0849, 0.2145, 0.0216],
 [-0.0824, 0.22057, 0.01536], [-0.0799, 0.21414, 0.01153], [-0.0774, 0.21573, 0.01877],
 [-0.0749, 0.20244, 0.01817], [-0.0724, 0.20195, 0.01557], [-0.0699, 0.20338,0.02181],
 [-0.0674, 0.20503, 0.01643], [-0.0649, 0.1981, 0.0085], [-0.0624, 0.20031, 0.01774],
 [-0.0599, 0.20045, 0.01476], [-0.0574, 0.21138, 0.02265], [-0.0549, 0.19821, 0.01974],
 [-0.0524, 0.20607, 0.01688], [-0.0499, 0.2183, 0.01415], [-0.0474, 0.24231, 0.01333],
 [-0.0449, 0.25763, 0.01901], [-0.0424, 0.23529, 0.03118], [-0.0399, 0.21355, 0.01856],
 [-0.0374, 0.19542, 0.01503], [-0.0349, 0.19272, 0.01606], [-0.0324, 0.19364, 0.01262],
 [-0.0299, 0.20069, 0.01485], [-0.0274, 0.26011, 0.02253], [-0.0249, 0.25864, 0.03109],
 [-0.0224, 0.27948, 0.02505], [-0.0199, 0.25866, 0.02407], [-0.0174, 0.2585, 0.03366],
 [-0.0149, 0.26522, 0.04006], [-0.0124, 0.25271, 0.05075], [-0.0099, 0.25321, 0.04837],
 [-0.0074, 0.261, 0.03408], [-0.0049, 0.25468, 0.03303], [-0.0024, 0.2771, 0.04304],
 [0.0, 0.25725, 0.0183], [0.0025, 0.23686, 0.05677], [0.005, 0.25952, 0.03455],
 [0.0075, 0.26276, 0.06127], [0.01, 0.24122, 0.03536], [0.0125, 0.24387, 0.02837],
 [0.015, 0.24744, 0.0428], [0.0175, 0.24962, 0.03361], [0.02, 0.24977, 0.02293],
 [0.0225, 0.25988, 0.04177], [0.025, 0.23971, 0.06567], [0.0275, 0.24758, 0.05134],
 [0.03, 0.23553, 0.03802], [0.0325, 0.25073, 0.03054], [0.035, 0.25746, 0.04352],
 [0.0375, 0.25071, 0.04156], [0.04, 0.25045, 0.0423], [0.0425, 0.25563, 0.03338],
 [0.045, 0.24839, 0.03692], [0.0475, 0.25685, 0.01855], [0.05, 0.27317, 0.05158],
 [0.0525, 0.2559, 0.02182], [0.055, 0.18696, 0.01624], [0.0575, 0.19725, 0.01911],
 [0.06, 0.20204, 0.02029], [0.0625, 0.20487,0.01119], [0.065, 0.21152, 0.02136],
 [0.0675, 0.26316, 0.02752], [0.07, 0.2444, 0.0157], [0.0725, 0.23981, 0.01915],
 [0.075, 0.23317, 0.01713], [0.0775, 0.20726, 0.02754], [0.08, 0.20304, 0.02534],
 [0.0825, 0.19221, 0.02165], [0.085, 0.20245, 0.0152], [0.0875, 0.20712, 0.0166]
])

### J7 Bias Conversion
Q1[:, 0] = (Q1[:, 0])*1000
Q2[:, 0] = (Q2[:, 0])*1000
Q3[:, 0] = (Q3[:, 0])*1000


# f = 4.604
f = 1
Al_gap = 380e-6
DAC_Al = 1e5*Al_gap/0.952
plt.errorbar(Q1[:, 0]*f, Q1[:, 1], yerr=Q1[:, 2]/np.sqrt(10), color='b', label='Q1')
plt.errorbar(Q2[:, 0]*f, Q2[:, 1], yerr=Q2[:, 2]/np.sqrt(10), color='r', label='Q2')
# plt.errorbar(Q3[:, 0]*f, Q3[:, 1], yerr=Q3[:, 2]/np.sqrt(10), color='y', label='Q3')

# plt.axvline(x=DAC_Al * f, color='k', linestyle='--', linewidth=4, label='JJ Al Gap')

# plt.xlabel('Radiator Josephson Frequency (GHz)')
plt.xlabel('Radiator Josephson Bias (mDAC)')
plt.ylabel('P1')
plt.yscale('log')
plt.grid()
plt.legend(loc=1)
# plt.xlim([0, 1500])
# plt.ylim([10, 100000])
plt.show()



