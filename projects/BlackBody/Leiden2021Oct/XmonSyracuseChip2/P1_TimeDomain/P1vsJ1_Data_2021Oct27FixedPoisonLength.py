"""### To analyze the P1 vs Duration
### Z:\mcdermott-group\data\Antenna\SUXmon2\Liu\VitoChip2\10-28-21
Same chip poison from J7

"""
import noiselib
import matplotlib.pyplot as plt
import numpy as np

Q2_22mDAC = np.array([
 [0.0, 0.04086, 0.00805], [10.0, 0.02909, 0.00614], [20.0, 0.02474, 0.00644],
 [30.0, 0.02292, 0.0048], [40.0, 0.01967, 0.0033], [50.0, 0.01445, 0.003] ,
 [60.0, 0.01779, 0.00369], [70.0, 0.0202, 0.00326], [80.0, 0.01935, 0.00453],
 [90.0, 0.01322, 0.00246], [100.0, 0.01554, 0.00393], [110.0, 0.02141, 0.01023],
 [120.0, 0.01724, 0.00165], [130.0, 0.01741, 0.00574], [140.0, 0.0137, 0.00211],
 [150.0, 0.01951, 0.00555], [160.0, 0.01268, 0.00323], [170.0, 0.01494, 0.00481],
 [180.0, 0.01433, 0.00396], [190.0, 0.01643, 0.00597], [200.0, 0.02344, 0.00684],
 [210.0, 0.01538, 0.00612], [220.0, 0.01901, 0.00439], [230.0, 0.01282, 0.00445],
 [240.0, 0.01415, 0.00338], [250.0, 0.01469, 0.00323], [260.0, 0.01443, 0.00585],
 [270.0, 0.01867, 0.00504], [280.0, 0.01302, 0.00373], [290.0, 0.01664, 0.00355],
 [300.0, 0.01989, 0.00211], [310.0, 0.01672, 0.00526], [320.0, 0.01537, 0.00316],
 [330.0, 0.0158, 0.00273]
])

Q2_32mDAC = np.array([
 [0.0, 0.05849, 0.01032], [10.0, 0.04123, 0.00426], [20.0, 0.03012, 0.00348],
 [30.0, 0.02583, 0.00388], [40.0, 0.02021, 0.00238], [50.0, 0.01905, 0.00577],
 [60.0, 0.01707, 0.00503], [70.0, 0.01898, 0.00483], [80.0, 0.01784, 0.00353],
 [90.0, 0.02344, 0.00518], [100.0, 0.01415, 0.00342], [110.0, 0.01806, 0.00284],
 [120.0, 0.0169, 0.00626], [130.0, 0.01637, 0.00659], [140.0, 0.017, 0.00741],
 [150.0, 0.01621, 0.00523], [160.0, 0.01547, 0.00259], [170.0, 0.01282, 0.00539],
 [180.0, 0.01682, 0.00171], [190.0, 0.01433, 0.0058], [200.0, 0.0147, 0.00554],
 [210.0, 0.0124, 0.00202], [220.0, 0.02664, 0.0126], [230.0, 0.01589, 0.00947],
 [240.0, 0.01983, 0.00873], [250.0, 0.01384, 0.00382], [260.0, 0.02187, 0.01747],
 [270.0, 0.01372, 0.0048], [280.0, 0.01554, 0.00467], [290.0, 0.01322, 0.00357],
 [300.0, 0.01912, 0.00621], [310.0, 0.01367, 0.0042], [320.0, 0.01091, 0.00249],
 [330.0, 0.01858, 0.00323]
])

Q2_56mDAC = np.array([
 [0.0, 0.04016, 0.00543], [10.0, 0.00828, 0.00422], [20.0, 0.01599, 0.00536],
 [30.0, 0.00975, 0.00286], [40.0, 0.01097, 0.00302], [50.0, 0.01485, 0.00554],
 [60.0, 0.01474, 0.00291], [70.0, 0.01155, 0.00495], [80.0, 0.01727, 0.00648],
 [90.0, 0.01239, 0.00228], [100.0, 0.01388, 0.00698], [110.0, 0.01799, 0.00815],
 [120.0, 0.01296, 0.00107], [130.0, 0.01257, 0.00197], [140.0, 0.0134, 0.00281],
 [150.0, 0.01334, 0.00374], [160.0, 0.01468, 0.00486], [170.0, 0.01554, 0.00344],
 [180.0, 0.01627, 0.0048], [190.0, 0.01237, 0.00362], [200.0, 0.01192, 0.0025],
 [210.0, 0.01676, 0.00287], [220.0, 0.01729, 0.00566], [230.0, 0.01374, 0.00461],
 [240.0, 0.01786, 0.00174], [250.0, 0.01245, 0.00239], [260.0, 0.01315, 0.0036],
 [270.0, 0.01533, 0.00172], [280.0, 0.01453, 0.00288], [290.0, 0.01391, 0.00208],
 [300.0, 0.01351, 0.00303], [310.0, 0.01671, 0.00638], [320.0, 0.01898, 0.00725],
 [330.0, 0.01554, 0.00238]
])


Q2_100mDAC = np.array([
 [0.0, 0.01238, 0.00908], [10.0, 0.00638, 0.0062], [20.0, 0.0005, 0.00078],
 [30.0, 0.0066, 0.00782], [40.0, 5e-05, 0.0001], [50.0, 0.00237, 0.00359],
 [60.0, 0.00548, 0.00405], [70.0, 0.00836, 0.00726], [80.0, 0.00016, 0.00032],
 [90.0, 0.01028, 0.00946], [100.0, 0.00525, 0.00437], [110.0, 0.00858, 0.00553],
 [120.0, 0.0084, 0.00586], [130.0, 0.01136, 0.00447], [140.0, 0.01012, 0.00607],
 [150.0, 0.01028, 0.00989], [160.0, 0.0094, 0.00503], [170.0, 0.00583, 0.00708],
 [180.0, 0.0086, 0.00631], [190.0, 0.00615, 0.00324], [200.0, 0.00613, 0.00445],
 [210.0, 0.00848, 0.00451], [220.0, 0.01209, 0.00466], [230.0, 0.00822, 0.00422],
 [240.0, 0.01366, 0.00844], [250.0, 0.01046, 0.01093], [260.0, 0.00623, 0.00584],
 [270.0, 0.00925, 0.005], [280.0, 0.01562, 0.01076], [290.0, 0.0175, 0.00612],
 [300.0, 0.0104, 0.00344], [310.0, 0.02462, 0.01902], [320.0, 0.00571, 0.00363],
 [330.0, 0.01572, 0.01052]
])

Q2_300mDAC = np.array([
 [0.0, 0.02493, 0.01041], [10.0, 0.0131, 0.01112], [20.0, 0.00129, 0.00257],
 [30.0, 0.00263, 0.00527], [40.0, 0.0, 0.0], [50.0, 0.00103, 0.00206],
 [60.0, 0.00567, 0.00601], [70.0, 0.00649, 0.0066], [80.0, 0.01585, 0.00411],
 [90.0, 0.00934, 0.0057], [100.0, 0.01224, 0.00822], [110.0, 0.02627, 0.00921],
 [120.0,0.01681, 0.00972], [130.0, 0.02469, 0.00995], [140.0, 0.03466, 0.01585],
 [150.0, 0.02547, 0.0075], [160.0, 0.02691, 0.00963], [170.0, 0.02313, 0.01456],
 [180.0,0.03539, 0.01026], [190.0, 0.02461, 0.00412], [200.0, 0.0279, 0.00676],
 [210.0, 0.03551, 0.01163], [220.0, 0.04534, 0.00588], [230.0, 0.03512, 0.0086],
 [240.0, 0.04168, 0.01134], [250.0, 0.03466, 0.00699], [260.0, 0.03275, 0.00852],
 [270.0, 0.03766, 0.00857], [280.0, 0.04744, 0.01509], [290.0, 0.03349, 0.00571],
 [300.0,0.03249, 0.004], [310.0, 0.0335, 0.00772], [320.0, 0.04081, 0.01809],
 [330.0, 0.02612, 0.00848]
])

Q4_22mDAC = np.array([
 [0.0, 0.07437, 0.01119], [10.0, 0.04814, 0.00652], [20.0, 0.03843, 0.00361],
 [30.0, 0.03234, 0.005], [40.0, 0.02836, 0.00663], [50.0, 0.02902, 0.0024],
 [60.0, 0.02395, 0.00792], [70.0, 0.03358, 0.00943], [80.0, 0.0243, 0.00674],
 [90.0, 0.02677, 0.00478], [100.0, 0.01915, 0.0037], [110.0, 0.02542, 0.00816],
 [120.0, 0.02633, 0.00833], [130.0, 0.02209, 0.0066], [140.0, 0.02279, 0.00586],
 [150.0, 0.02749, 0.00779], [160.0, 0.02238, 0.00496], [170.0, 0.0242, 0.00278],
 [180.0, 0.0233, 0.00749], [190.0, 0.02422, 0.00934], [200.0, 0.02821, 0.00447],
 [210.0, 0.02186, 0.00741], [220.0, 0.02705, 0.0065], [230.0, 0.02024, 0.00692],
 [240.0, 0.02458, 0.00842], [250.0, 0.02382, 0.00404], [260.0, 0.03093, 0.00978],
 [270.0, 0.02781, 0.00509], [280.0, 0.02188, 0.00358], [290.0, 0.02755, 0.0131],
 [300.0, 0.02662, 0.00602], [310.0, 0.02423, 0.00413], [320.0, 0.02512, 0.00574],
 [330.0, 0.02454, 0.0017]
])

Q4_32mDAC = np.array([
 [0.0, 0.07942, 0.00895], [10.0, 0.05029, 0.00215], [20.0, 0.03532, 0.00605],
 [30.0, 0.03321, 0.00684], [40.0, 0.02964, 0.00936], [50.0, 0.02555, 0.00626],
 [60.0, 0.02367, 0.00505], [70.0, 0.02861, 0.0056], [80.0, 0.02326, 0.00351],
 [90.0, 0.02047, 0.00499], [100.0, 0.0252, 0.00776], [110.0, 0.02833, 0.00531],
 [120.0, 0.02879, 0.00892], [130.0, 0.02466, 0.00765], [140.0, 0.02238, 0.00436],
 [150.0, 0.02175, 0.00648], [160.0, 0.02428, 0.00507], [170.0, 0.02263, 0.00793],
 [180.0, 0.02362, 0.01058], [190.0, 0.01818, 0.00247], [200.0, 0.01999, 0.00409],
 [210.0, 0.02034, 0.00778], [220.0, 0.02516, 0.00452], [230.0, 0.02616, 0.00379],
 [240.0, 0.02627, 0.00484], [250.0, 0.02136, 0.00619], [260.0, 0.03272, 0.01006],
 [270.0, 0.03024, 0.01893], [280.0, 0.02216, 0.0048], [290.0, 0.02212, 0.00814],
 [300.0, 0.02114, 0.00611], [310.0, 0.02708, 0.00673], [320.0, 0.0257, 0.01253],
 [330.0, 0.02474, 0.00528]
])

Q4_56mDAC = np.array([
 [0.0, 0.13736, 0.00766], [10.0, 0.01858, 0.00858], [20.0, 0.0131, 0.00363],
 [30.0, 0.02258, 0.01027], [40.0, 0.01895, 0.00725], [50.0, 0.01892, 0.00562],
 [60.0, 0.01801, 0.00709], [70.0, 0.02369, 0.01177], [80.0, 0.0256, 0.00633],
 [90.0, 0.03078, 0.00978], [100.0, 0.0258, 0.0044], [110.0, 0.02244, 0.00735],
 [120.0, 0.0266, 0.00286], [130.0, 0.02136, 0.00663], [140.0, 0.02562, 0.00777],
 [150.0, 0.02554, 0.00505], [160.0, 0.02768, 0.0062], [170.0, 0.0369, 0.00879],
 [180.0, 0.0294, 0.00425], [190.0, 0.02985, 0.01026], [200.0, 0.03483, 0.01365],
 [210.0, 0.0293, 0.00496], [220.0, 0.02875, 0.00722], [230.0, 0.02624, 0.00543],
 [240.0, 0.02616, 0.00755], [250.0, 0.02705, 0.00458], [260.0, 0.03044, 0.00441],
 [270.0, 0.02874, 0.00582], [280.0, 0.03089, 0.00339], [290.0, 0.03587, 0.01627],
 [300.0, 0.031, 0.00337], [310.0, 0.03294, 0.01222], [320.0, 0.03787, 0.01139],
 [330.0, 0.03491, 0.00543]
])

Q4_100mDAC = np.array([
 [0.0, 0.12222, 0.01223], [10.0, 0.00075, 0.00095], [20.0, 0.00203, 0.00405],
 [30.0, 0.00266, 0.00412], [40.0, 0.00172, 0.00344], [50.0, 0.00659, 0.0055],
 [60.0, 0.01101, 0.01145], [70.0, 0.00414, 0.00511], [80.0, 0.00375, 0.00447],
 [90.0, 0.00817, 0.01249], [100.0, 0.00908, 0.00796], [110.0, 0.0193, 0.01209],
 [120.0, 0.02546, 0.01033], [130.0, 0.00892, 0.00691], [140.0, 0.01334, 0.00649],
 [150.0, 0.02212, 0.01156], [160.0, 0.03019, 0.01958], [170.0, 0.00857, 0.00752],
 [180.0, 0.02387, 0.00873], [190.0, 0.0169, 0.01189], [200.0, 0.03327, 0.01254],
 [210.0, 0.04001, 0.01539], [220.0, 0.02705, 0.01727], [230.0, 0.02786, 0.01548],
 [240.0, 0.02141, 0.01039], [250.0, 0.02921, 0.01419], [260.0, 0.01564, 0.00834],
 [270.0, 0.03655, 0.01876], [280.0, 0.02962, 0.02291], [290.0, 0.01482, 0.0042],
 [300.0, 0.02861, 0.00918], [310.0, 0.02807, 0.01961], [320.0, 0.02743, 0.0097],
 [330.0, 0.02205, 0.00668]
])

Q4_300mDAC = np.array([
 [0.0, 0.02137, 0.00508], [10.0, 0.00433, 0.00366], [20.0, 0.00023, 0.00047],
 [30.0, 8e-05, 0.00016], [40.0, 0.0, 0.0], [50.0, 0.00485, 0.0063], [60.0, 0.00405, 0.00474],
 [70.0, 0.00058, 0.00117], [80.0, 0.00093, 0.00125], [90.0, 0.00233, 0.00466],
 [100.0, 0.00556, 0.00577], [110.0, 0.01962, 0.01629], [120.0,0.01203, 0.00548],
 [130.0, 0.02651, 0.02008], [140.0, 0.00936, 0.00819], [150.0, 0.0346, 0.01934],
 [160.0, 0.0325, 0.01546], [170.0, 0.03252, 0.00624], [180.0, 0.03944, 0.01355],
 [190.0, 0.04973, 0.00452], [200.0, 0.02543, 0.00884], [210.0, 0.03532, 0.00666],
 [220.0, 0.04578, 0.01474], [230.0, 0.0351, 0.00848], [240.0, 0.04056, 0.01862],
 [250.0, 0.06173, 0.0181], [260.0, 0.03321, 0.01893], [270.0, 0.05075, 0.02152],
 [280.0, 0.04902, 0.01271], [290.0, 0.04985, 0.01564], [300.0, 0.04679, 0.01134],
 [310.0, 0.04958, 0.00956], [320.0, 0.04454, 0.02486], [330.0, 0.04561, 0.01535]
])

### J7 Bias Conversion

# plt.errorbar(Q2_22mDAC[:, 0], Q2_22mDAC[:, 1], yerr=Q2_22mDAC[:, 2]/np.sqrt(5), label='Q2_22mDAC')
# # plt.errorbar(Q2_32mDAC[:, 0], Q2_32mDAC[:, 1], yerr=Q2_32mDAC[:, 2]/np.sqrt(5), label='Q2_32mDAC')
# plt.errorbar(Q2_56mDAC[:, 0], Q2_56mDAC[:, 1], yerr=Q2_56mDAC[:, 2]/np.sqrt(5), label='Q2_56mDAC')
# plt.errorbar(Q2_100mDAC[:, 0], Q2_100mDAC[:, 1], yerr=Q2_100mDAC[:, 2]/np.sqrt(5), linestyle='--', label='Q2_100mDAC')
# plt.errorbar(Q2_300mDAC[:, 0], Q2_300mDAC[:, 1], yerr=Q2_300mDAC[:, 2]/np.sqrt(5), linestyle='--', label='Q2_300mDAC')

# plt.plot(Q2_22mDAC[:, 0], Q2_22mDAC[:, 1], '--', label='Q2_22mDAC')
# plt.plot(Q2_32mDAC[:, 0], Q2_32mDAC[:, 1], 'o-', label='Q2_32mDAC')
# plt.plot(Q2_56mDAC[:, 0], Q2_56mDAC[:, 1], 'd-', label='Q2_56mDAC')
# plt.plot(Q2_100mDAC[:, 0], Q2_100mDAC[:, 1], 's-',  label='Q2_100mDAC')
# plt.plot(Q2_300mDAC[:, 0], Q2_300mDAC[:, 1], '*-', label='Q2_300mDAC')

# plt.errorbar(Q4_22mDAC[:, 0], Q4_22mDAC[:, 1], yerr=Q4_22mDAC[:, 2]/np.sqrt(5), label='Q4_22mDAC')
# # # plt.errorbar(Q4_32mDAC[:, 0], Q4_32mDAC[:, 1], yerr=Q4_32mDAC[:, 2]/np.sqrt(5), label='Q4_32mDAC')
# plt.errorbar(Q4_56mDAC[:, 0], Q4_56mDAC[:, 1], yerr=Q4_56mDAC[:, 2]/np.sqrt(5), label='Q4_56mDAC')
# plt.errorbar(Q4_100mDAC[:, 0], Q4_100mDAC[:, 1], yerr=Q4_100mDAC[:, 2]/np.sqrt(5), linestyle='--', label='Q4_100mDAC')
# plt.errorbar(Q4_300mDAC[:, 0], Q4_300mDAC[:, 1], yerr=Q4_300mDAC[:, 2]/np.sqrt(5), linestyle='--', label='Q4_300mDAC')

plt.plot(Q4_22mDAC[:, 0], Q4_22mDAC[:, 1], '--', label='Q4_22mDAC')
plt.plot(Q4_32mDAC[:, 0], Q4_32mDAC[:, 1], 'o-', label='Q4_32mDAC')
plt.plot(Q4_56mDAC[:, 0], Q4_56mDAC[:, 1], 'd-', label='Q4_56mDAC')
plt.plot(Q4_100mDAC[:, 0], Q4_100mDAC[:, 1], 's-',  label='Q4_100mDAC')
plt.plot(Q4_300mDAC[:, 0], Q4_300mDAC[:, 1], '*-', label='Q4_300mDAC')

# plt.axvline(x=DAC_Al * f, color='k', linestyle='--', linewidth=4, label='JJ Al Gap')

# plt.xlabel('Radiator Josephson Frequency (GHz)')
plt.xlabel('Josephson Bias Idle time (us)')
plt.ylabel('P1')
# plt.yscale('log')
plt.grid()
plt.legend(loc=1)
# plt.xlim([0, 1500])
# plt.ylim([10, 100000])
plt.show()



