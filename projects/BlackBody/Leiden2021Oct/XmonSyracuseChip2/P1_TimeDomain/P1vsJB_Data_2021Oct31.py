"""
P1 for Q24 at different J7 Bias
Data:
 Z:\mcdermott-group\data\Antenna_Temporary\SUXmon2\Liu\VitoChip2\P12021Oct31_Q2WithJ7OnChip_TimeDomain\P1_J7_Q2_Chunk0\MATLABData


"""
import noiselib
import matplotlib.pyplot as plt
import numpy as np

Q2 = np.array([
 [0.0, 0.01258, 0.00543], [0.005, 0.01258, 0.00431], [0.01, 0.01306, 0.00468],
 [0.015, 0.01312, 0.00575], [0.02, 0.01265, 0.00446], [0.025, 0.01222, 0.00462],
 [0.0275, 0.0139, 0.00698], [0.03, 0.01253, 0.00343], [0.0325, 0.01405, 0.00441],
 [0.0349, 0.01277, 0.00395], [0.0374, 0.0127, 0.0044], [0.04, 0.01276, 0.0041],
 [0.041, 0.01286, 0.00438], [0.042, 0.01386, 0.0057], [0.043, 0.01468, 0.0055],
 [0.044, 0.01267, 0.00501], [0.045, 0.01279, 0.00465], [0.046, 0.0151, 0.00635],
 [0.047, 0.01375, 0.00621], [0.048, 0.01381, 0.00516], [0.049, 0.01361, 0.00391],
 [0.05, 0.01454, 0.00568], [0.051, 0.01274, 0.00393], [0.052, 0.01294, 0.00387],
 [0.053, 0.0143, 0.0054], [0.054, 0.01449, 0.00469], [0.055, 0.01406, 0.00508],
 [0.056, 0.013, 0.0039], [0.057, 0.0127, 0.00363], [0.058, 0.0145, 0.00428],
 [0.059, 0.01507, 0.00646], [0.06, 0.01579, 0.00645], [0.061, 0.01358, 0.00504],
 [0.062, 0.01295, 0.00324], [0.063, 0.01341, 0.00378], [0.064, 0.0145, 0.00569],
 [0.065, 0.01386, 0.00416], [0.066, 0.01442, 0.00418], [0.067, 0.01436, 0.00516],
 [0.068, 0.01379, 0.00401], [0.069, 0.01312, 0.00379], [0.07, 0.01279, 0.00402],
 [0.07, 0.01415, 0.00449], [0.0725, 0.01438, 0.00545], [0.075, 0.0154, 0.00442],
 [0.0775, 0.0147, 0.00436], [0.08, 0.01379, 0.00432], [0.0825, 0.01392, 0.00377],
 [0.085, 0.01466, 0.00502], [0.0875, 0.01394, 0.00304], [0.09, 0.01478, 0.00439],
 [0.0925, 0.01532, 0.00429], [0.095, 0.01599, 0.00679], [0.0975, 0.0146, 0.00426],
 [0.1, 0.01639, 0.00489], [0.105, 0.0158, 0.00496], [0.11, 0.01593, 0.00488],
 [0.115, 0.01692, 0.00874], [0.12, 0.0165, 0.00435], [0.125, 0.01775, 0.00688],
 [0.13, 0.01742, 0.00391], [0.135, 0.01841, 0.00482], [0.14, 0.01786, 0.00405],
 [0.145, 0.0204, 0.00465], [0.15, 0.01913, 0.00601], [0.155, 0.02037, 0.00551],
 [0.16, 0.02061, 0.00717], [0.165, 0.02055, 0.00431], [0.17, 0.02068, 0.00536],
 [0.175, 0.0203, 0.00472], [0.18, 0.02163, 0.00425], [0.185, 0.02244, 0.00496],
 [0.19, 0.02372, 0.00433], [0.195, 0.02457, 0.00712], [0.2, 0.0231, 0.00436],
 [0.205, 0.02489, 0.00501], [0.21, 0.02522, 0.00623], [0.215, 0.02603, 0.00533],
 [0.22, 0.0264, 0.00566], [0.225, 0.02638, 0.00511], [0.23, 0.02803, 0.00472],
 [0.235, 0.02781, 0.00486], [0.24, 0.02795, 0.00433], [0.245, 0.02812, 0.00468]
])

Q4 = np.array([
 [0.0, 0.02206, 0.00487], [0.005, 0.02018, 0.00459], [0.01, 0.0217, 0.00594],
 [0.015, 0.02131, 0.005], [0.02, 0.02206, 0.00528], [0.025, 0.02302, 0.00702],
 [0.0275, 0.02232, 0.00567], [0.03, 0.02346, 0.00588], [0.0325, 0.02364, 0.0065],
 [0.0349, 0.02236, 0.00502], [0.0374, 0.02255, 0.00606], [0.04, 0.02179, 0.00573],
 [0.041, 0.02213, 0.00445], [0.042, 0.02455, 0.00551], [0.043, 0.02434, 0.00537],
 [0.044, 0.02436, 0.00571], [0.045, 0.02322, 0.0049], [0.046, 0.02331, 0.00612],
 [0.047, 0.025, 0.00521], [0.048, 0.0244, 0.00458], [0.049, 0.0252, 0.00579],
 [0.05, 0.02348, 0.00613], [0.051, 0.0236, 0.00607], [0.052, 0.02506, 0.00416],
 [0.053, 0.02507, 0.00577], [0.054, 0.02589, 0.0052], [0.055,0.02421, 0.0057],
 [0.056, 0.02639, 0.00609], [0.057, 0.0245, 0.00485], [0.058, 0.02436, 0.00615],
 [0.059, 0.02519, 0.0058], [0.06, 0.02632, 0.00529], [0.061, 0.02509, 0.00551],
 [0.062, 0.02489, 0.0058], [0.063, 0.02512, 0.00603], [0.064, 0.02392, 0.00535],
 [0.065, 0.02586, 0.00485],[0.066, 0.02599, 0.00651], [0.067, 0.02289, 0.00549],
 [0.068, 0.02466, 0.00417], [0.069, 0.02633, 0.00714], [0.07, 0.02579, 0.0062],
 [0.07, 0.02747, 0.0065], [0.0725, 0.02503, 0.00487], [0.075, 0.02606, 0.00538],
 [0.0775, 0.02671, 0.00476], [0.08, 0.02768, 0.00579], [0.0825, 0.02807, 0.00598],
 [0.085, 0.02782, 0.00466], [0.0875, 0.02734, 0.00629], [0.09, 0.02785, 0.00529],
 [0.0925, 0.02721, 0.00497], [0.095, 0.02727, 0.00618], [0.0975, 0.02889, 0.00639],
 [0.1, 0.02749, 0.0045], [0.105, 0.02921, 0.00655], [0.11, 0.02955, 0.005],
 [0.115, 0.03013, 0.00658], [0.12,0.03073, 0.00647], [0.125, 0.03215, 0.0068],
 [0.13, 0.03194, 0.00615], [0.135, 0.03181, 0.00589], [0.14, 0.0317, 0.00562],
 [0.145, 0.03213, 0.00596], [0.15, 0.03401, 0.00564], [0.155, 0.03365, 0.00564],
 [0.16, 0.03507, 0.00672], [0.165, 0.03595, 0.00588], [0.17, 0.03419, 0.00597],
 [0.175, 0.03667, 0.00524], [0.18, 0.03874, 0.00606], [0.185, 0.03805, 0.00541],
 [0.19, 0.03896, 0.00537], [0.195, 0.03836, 0.00589], [0.2, 0.041, 0.00611],
 [0.205, 0.03995, 0.00521], [0.21, 0.04171, 0.00649], [0.215, 0.04198, 0.0068],
 [0.22, 0.04461, 0.00701], [0.225, 0.04485, 0.00506], [0.23, 0.04391, 0.00604],
 [0.235, 0.04578, 0.00558], [0.24, 0.04674, 0.00634], [0.245, 0.0459, 0.00619]
])
### J7 Bias Conversion
Q2[:, 0] = (Q2[:, 0])*1000
Q4[:, 0] = (Q4[:, 0])*1000


f = 4.604
# f = 1
Al_gap = 380e-6
DAC_Al = 1e5*Al_gap/0.952
plt.errorbar(Q2[:, 0]*f, Q2[:, 1], yerr=Q2[:, 2]/np.sqrt(50), color='b', label='Q2')
plt.errorbar(Q4[:, 0]*f, Q4[:, 1], yerr=Q4[:, 2]/np.sqrt(50), color='r', label='Q4')

plt.axvline(x=DAC_Al * f, color='k', linestyle='--', linewidth=4, label='JJ Al Gap')

plt.xlabel('Radiator Josephson Frequency (GHz)')
# plt.xlabel('Radiator Josephson Bias (mDAC)')
plt.ylabel('P1')
plt.yscale('log')
plt.grid()
plt.legend(loc=1)
# plt.xlim([0, 1500])
# plt.ylim([10, 100000])
plt.show()



