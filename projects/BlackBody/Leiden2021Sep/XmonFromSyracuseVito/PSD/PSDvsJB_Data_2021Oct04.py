"""
PSD for Q2 at different J7 Bias
Data:
### src: Z:\mcdermott-group\data\Antenna\SUXmon\Liu\VitoChip1\10-04-21\P1_JB_Q3\MATLABData\
Fitting method Chris' no white noise verison

"""
import noiselib
import matplotlib.pyplot as plt
import numpy as np



Q2 = np.array([
    [0, 371.14], [2000, 369.97], [4000, 375.69], [6000, 356.82], [8000, 369.57],
    [10000, 353.39], [12000, 365.89], [14000, 609.26], [16000, 1071.49],
    [18000, 2324.16], [20000, 2266.18], [22000, 4337.28], [24000, 7424.02],
    [26000, 5392.25], [28000, 2161.45], [30000, 1818.08], [32000, 1081.65],
    [34000, 684.81], [36000, 691.99], [38000, 759.46], [40000, 898.52],
    [42000, 1081.35], [44000, 1354.85], [46000, 1735.18], [48000, 1948.75],
    [50000, 2154.12], [52000, 2497.86], [54000, 4054.68], [56000, 4720.82],
    [58000, 5113.44], [60000, 6098.86], [62000, 8058.75], [64000, 9301.08],
    [66000, 6947.42], [68000, 9125.52], [70000, 7989.44], [72000, 13593.55],
    [74000, 18918.19], [76000, 10437.61],[78000, 16761.9], [80000, 37059.05],
    [82000, 40321.95], [84000, 40401.47], [86000, 43726.85], [88000, 54073.7],
    [90000, 41859.17], [92000, 37337.43], [94000, 52313.14], [96000, 44321.85],
    [98000, 52347.23]
])


Q2_Neg = np.array([
    [1999, 503.83], [3999, 1567.0], [5999, 3865.21], [7999, 2283.03],
    [9999, 5597.11], [11999, 9139.6], [13999, 5538.22], [15999, 2214.55],
    [17999, 1482.76], [19999, 873.36], [21999, 702.69], [23999, 703.72],
    [25999, 766.76], [27999, 1011.41], [29999, 1105.5], [31999, 1355.97],
    [33999, 1547.36], [35999, 1824.87], [37999, 2168.3], [39999, 2578.57],
    [41999, 4246.32], [43999, 4634.68], [45999, 6693.82], [47999, 6427.76],
    [49999, 7979.69], [51999, 9444.71], [53999, 7920.5], [55999, 7445.04],
    [57999, 10946.72], [59999, 12340.48], [61999, 17652.38], [63999, 17071.87],
    [65999, 31723.73], [67999, 37487.91], [69999, 33542.03], [71999, 41325.47],
    [73999, 44300.66], [75999, 38724.35], [77999, 39539.77], [79999,39581.76],
    [81999, 61829.61]
])

### J7 Bias Conversion
Q2[:, 0] = (Q2[:, 0])/1000
Q2_Neg[:, 0] = (Q2_Neg[:, 0])/(-1000)


# plt.plot(Q1[:, 0], Q1[:, 1], color='b', label='Q1')
plt.plot(Q2[:, 0], Q2[:, 1], color='r', label='Q2')
plt.plot(Q2_Neg[:, 0], Q2_Neg[:, 1], color='r', label='Q2_Neg')
# plt.plot(Q4[:, 0], Q4[:, 1], color='y', label='Q4')
plt.xlabel('Radiator Josephson Frequency (mDAC)')
plt.ylabel('PSD (Hz)')
plt.yscale('log')
plt.grid()
plt.legend(loc=1)
plt.show()

# f = 4.604
# plt.plot(Q1[:, 0]*f, Q1[:, 1], color='b', label='Q1')
# plt.plot(Q2[:, 0]*f, Q2[:, 1], color='r', label='Q2')
# plt.plot(Q4[:, 0]*f, Q4[:, 1], color='y', label='Q4')
#
# plt.xlabel('Radiator Josephson Frequency (GHz)')
# plt.ylabel('PSD (Hz)')
# plt.yscale('log')
# plt.grid()
# plt.legend(loc=1)
# plt.show()



