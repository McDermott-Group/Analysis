"""
PSD, Up for Q1, Q2, Q4 at different J6 Bias
Data:
Z:\mcdermott-group\data\Antenna\Circmon\Liu\CW20180514A_Ox2\J6Radiator_2021Sep28_Q124
Fitting method Chris' no white noise verison

file_path = ('Z:/mcdermott-group/data/Antenna/Circmon/LIU/CW20180514A_Ox2/{}/{}/MATLABData/{}')
date = 'J6Radiator_2021Oct01_UpRate'

"""
import noiselib
import matplotlib.pyplot as plt
import numpy as np

### PSD data starts
Q1 = np.array([
    [0, 1309.41], [5000, 1202.46], [10000, 1257.06], [15000, 1253.56],
    [16000, 1360.02], [18000, 1290.98], [20000, 1302.08], [22000, 1451.04],
    [24000, 4653.85], [26000, 5423.6], [28000, 5000.0], [30000, 2879.38],
    [32000, 2463.74], [34000, 2256.49], [36000, 2678.11], [38000, 1884.2],
    [40000, 2574.14], [42000, 2749.1], [44000, 3095.4], [46000, 2901.41],
    [48000, 3409.55], [50000, 2401.43], [52000, 2317.49], [54000, 2105.69],
    [56000, 1897.39], [58000, 1787.08], [60000, 1934.39], [62000, 1726.89],
    [64000, 1865.93], [66000, 1768.63], [68000, 1993.81], [70000, 2007.93],
    [72000, 1810.38], [74000, 1533.63], [76000, 1670.93], [78000, 1638.43],
    [80000, 1710.72], [82000, 1625.97], [84000, 1629.37], [86000, 1679.06],
    [88000, 1765.72], [90000, 2366.72], [92000, 2970.07], [94000, 4349.88],
    [96000, 4636.59], [98000, 4695.57], [100000, 5655.69], [105000, 5907.69],
    [110000, 5945.92], [115000, 5985.15], [120000, 6399.23], [125000, 7765.27],
    [130000, 9243.19], [135000, 10178.87], [140000, 8877.68], [145000, 11697.55]
])

Q2 = np.array([
    [0, 32.01], [5000, 29.97], [10000, 31.37], [15000, 31.56], [16000, 33.02],
    [18000, 31.69], [20000, 29.76], [22000, 34.45], [24000, 35.46], [26000, 47.31],
    [28000, 91.74], [30000, 54.85], [32000, 50.36], [34000, 50.74], [36000, 79.28],
    [38000, 94.05], [40000, 120.36], [42000, 122.03], [44000, 168.61], [46000, 190.39],
    [48000, 148.34], [50000, 83.81], [52000, 79.13], [54000, 92.21], [56000, 83.76],
    [58000, 101.55], [60000, 119.52], [62000, 143.76],
    [64000, 189.63], [66000, 310.34], [68000, 360.89], [70000, 426.95],
    [72000, 449.13], [74000, 368.66], [76000, 405.52], [78000, 530.5], [80000, 679.16],
    [82000, 692.8], [84000, 540.8], [86000, 375.92], [88000, 279.65], [90000, 305.39],
    [92000, 273.98], [94000, 268.65], [96000, 215.98], [98000, 173.68], [100000, 163.88],
    [105000, 143.24], [110000, 145.09], [115000, 148.59], [120000, 178.1],
    [125000, 198.47], [130000, 234.36], [135000, 294.83], [140000, 329.11],
    [145000, 379.19], [160000, 555.6], [170000, 699.38], [180000, 957.06], [190000, 1245.28],
    [200000, 1494.14], [210000, 1600.25]
])

Q4 = np.array([
    [0, 415.1], [5000, 412.7], [10000, 409.8], [15000, 413.45], [16000, 410.13],
    [18000, 384.57], [20000, 374.62], [22000, 405.64], [24000, 429.37],
    [26000, 534.52], [28000, 585.86], [30000, 581.77], [32000, 620.35],
    [34000, 783.81], [36000, 1053.56], [38000, 1239.54], [40000, 2592.98],
    [42000, 2928.66], [44000, 3009.03], [46000, 3431.39], [48000, 3618.11],
    [50000, 3053.33], [52000, 3118.78], [54000, 2693.89], [56000, 2784.27],
    [58000, 2119.42], [60000, 2129.19], [62000, 1640.43], [64000, 1480.2],
    [66000, 1672.87], [68000, 1937.71], [70000, 1441.59], [72000, 1553.23],
    [74000, 1188.19], [76000, 928.82], [78000, 1005.47], [80000, 926.91],
    [82000, 883.31], [84000, 1005.4], [86000, 838.11], [88000, 1121.81],
    [90000, 1190.31], [92000, 972.33], [94000, 1046.41], [96000, 1128.32],
    [98000, 1206.94], [100000, 1223.84], [105000, 1380.69], [110000, 1290.75],
    [115000, 1415.46], [120000, 1559.74], [125000, 2185.29], [130000, 2794.58],
    [135000, 3377.62], [140000, 4160.4], [145000, 4621.06]
])

### J6 Bias Conversion
Q1[:, 0] = (Q1[:, 0])/1000
Q2[:, 0] = (Q2[:, 0])/1000
Q4[:, 0] = (Q4[:, 0])/1000

### PSD data ends


### Up data starts
J6_Bias = np.array([0.,0.01,  0.016, 0.02,  0.024,
                       0.028, 0.032, 0.036, 0.04,  0.044,
                       0.048, 0.052, 0.056, 0.06,  0.064, 0.068,
                       0.072, 0.076, 0.08,  0.084, 0.088, 0.092,
                       0.096, 0.1,0.11,  0.12,  0.13,  0.14 ])

Q1_UpRate = np.array([1043.0178511298425, 413.1934017284067, 62.538891802136526, 327.7205910252859, -386.14640093287073, 752.8735127164853, 485.2290028590379, 334.4714258362034, 289.44316360965956, 524.5776824084975, 487.4194886751245, 509.42994646418595, 183.39480048828455, 114.01194703763899, 244.81046597554683, 115.03570019836243, 495.5567861881237, 374.1001739307414, 669.4921876306945, 419.657385069014, 664.4668489230843, 562.6928811045376, 956.713697354048, 1073.2510543851758, 943.0829465706006, 1355.5412661494088, 1178.0196698468337, 919.8712758545403])

Q2_UpRate = np.array([108.40216044135182, 207.74888430447785, 151.80399275572907, 295.3867778314217, 259.35827631122925, -412.7256205918602, -116.459842935033, 331.9185153352114, 164.0735031567381, 68.5302839127844, 427.7903477651917, 527.0665786374522, 151.23526324062794, 460.42020690558206, 871.5907804371674, 155.76619149671336, 462.3721213816963, -196.9495707949152, 467.7095674066697, 725.3287637354542, -87.91489954703651, 778.3591207765811, 509.01969373545455, 254.47504030471208, 482.9170804063113, 67.85520562409171, 740.5639220937628, 184.21564404779554])

Q4_UpRate = np.array([390.4563444084148, 520.1561489919309, 529.6753572459689, 448.39214327991004, 460.9577270252152, 433.0590733285961, 513.3777484501026, 461.277841048466, 781.5628565613667, 706.534231910899, 814.6375254274093, 884.1499847833161, 773.0895529918014, 584.0582007976126, 644.2882951115167, 597.1468262720822, 685.6828912373736, 605.7209503109923, 500.649506269877, 567.1324669629695, 563.8367492796783, 643.618124525485, 516.5469820569058, 590.4321353062433, 739.7510317028585, 801.4571564887613, 812.6869794271179, 1063.9143122951925])

### Up data ends

fig, ax1 = plt.subplots()
# fig, (ax1, ax2) = plt.subplots(2)

# plt.plot(Q1[:, 0], Q1[:, 1], color='b', label='Q1')
# plt.plot(Q2[:, 0], Q2[:, 1], color='r', label='Q2')
# plt.plot(Q4[:, 0], Q4[:, 1], color='y', label='Q4')
# plt.xlabel('Radiator Josephson Frequency (mDAC)')
# plt.ylabel('PSD (Hz)')
# plt.yscale('log')
# plt.grid()
# plt.legend(loc=1)
# plt.show()

"""
fk = 4.604
ax1.plot(Q1[:, 0] * fk, Q1[:, 1], color='b', label='Q1_PSD')
ax1.plot(Q2[:, 0] * fk, Q2[:, 1], color='r', label='Q2_PSD')
ax1.plot(Q4[:, 0] * fk, Q4[:, 1], color='y', label='Q4_PSD')
# ax1.set_xlabel('Radiator Josephson Frequency (GHz)')
ax1.set_ylabel('Rate (Hz)')
ax1.set_yscale('log')
ax1.grid()
"""

f = 4.604
ax1.plot(Q1[:, 0]*f, Q1[:, 1], color='b', label='Q1')
ax1.plot(Q2[:, 0]*f, Q2[:, 1], color='r', label='Q2')
ax1.plot(Q4[:, 0]*f, Q4[:, 1], color='y', label='Q4')

# ax1.plot(J6_Bias*1000 * f, Q1_UpRate, '--', color='b', label='Q1_Up')
# ax1.plot(J6_Bias*1000 * f, Q2_UpRate, '--', color='r', label='Q2_Up')
ax1.plot(J6_Bias*1000 * f, Q4_UpRate, '--', color='y', label='Q4_Up')

ax1.set_ylabel('Rate (Hz)')
ax1.set_yscale('log')
ax1.set_xlabel('J2 Radiation (GHz)')
ax1.legend()
ax1.grid()
ax1.set_xlim([0, 800])
ax1.set_ylim([10, 50000])

plt.show()



