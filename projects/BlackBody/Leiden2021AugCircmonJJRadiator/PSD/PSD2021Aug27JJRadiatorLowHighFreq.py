"""
PSD for Q1, Q2, Q4 at different J2 Bias
Data: Z:\mcdermott-group\data\BlackBody\Circmon\LIU\CW20180514A_Ox2\JJJRadiatorQPT_HighFreq_2021Aug27
Data: Z:\mcdermott-group\data\BlackBody\Circmon\LIU\CW20180514A_Ox2\JJJRadiatorQPT_LowFreq_2021Aug27
"""
import numpy as np
import matplotlib.pyplot as plt
from scipy.constants import *
from scipy.optimize import curve_fit
import copy

Q1 = np.array([
 [0, 2064.6283812937995], [2500, 2141.599742667884], [5000, 2117.537764356045],
 [7500, 2101.005222366233], [10000, 1987.8837219885638], [12500, 1804.0013668822703],
 [15000, 1990.0982454251996], [17500, 2065.4152926899797], [20000, 2060.048336455654],
 [22500, 2239.1517798264313], [25000, 44916.706590385074], [60000, 4861.446723441884],
 [65000, 3945.7871916900876], [70000, 3770.876349043334], [75000, 3746.5743429270215],
 [80000, 3875.3828156680693], [85000, 3675.235248019374], [90000, 3931.50624581608],
 [95000, 4063.903937143311], [100000, 7478.056716003843], [105000, 17565.677520752146],
 [110000, 41569.08396562627], [115000, 61491.657861219945], [120000, 60449.84276970649],
 [125000, 61172.52337782745], [130000, 74391.05568576558], [135000, 45342.97395760531],
 [140000, 6901.5703853549], [145000, 6050.901671246356]
])

Q2 = np.array([
 [0, 52.503328264687084], [2500, 53.22391004825858], [5000, 52.37018692660267],
 [7500, 51.51861944659332], [10000, 52.17186722967654], [12500, 53.24786201614285],
 [15000, 52.74860618995275], [17500, 51.674000681824694], [20000, 52.465421658926765],
 [22500, 54.485996375917196], [25000, 73.60350170516595], [60000, 401.2342333346891],
 [65000, 319.14094879930116], [70000, 518.0999982976987], [75000, 628.241066856054],
 [80000, 949.1474157507641], [85000, 1034.7286150025789], [90000, 738.1591574656969],
 [95000, 363.0648840366401], [100000, 367.304426446398], [105000, 330.8011065963312],
 [110000, 321.7314179312635], [115000, 369.9961482574775], [120000, 412.36582872192974],
 [125000, 481.80884336837886], [130000, 565.341006579799], [135000, 655.3302392058201],
 [140000, 764.5874651693538], [145000, 839.3787885070755]
])

Q4 = np.array([
 [0, 619.621125083668], [2500, 618.2742414839059], [5000, 605.0673018389136],
 [7500, 617.0250675112522], [10000, 610.0660878463459], [12500, 599.0120141819696],
 [15000, 607.5732237500464], [17500, 609.2221603183564], [20000, 615.7541473288672],
 [22500, 614.8488850381015], [25000, 806.7004151833646], [60000, 5293.927011296233],
 [65000, 3660.477146333964], [70000, 2753.0407453978896], [75000, 2617.911967801366],
 [80000, 2082.318753038359], [85000, 2049.047893797317], [90000, 2157.5933994449642],
 [95000, 2260.4961949450503], [100000, 2460.7352515144044], [105000, 2809.123032787773],
 [110000, 3079.636848148564], [115000, 3414.9810416702253], [120000, 3743.0439787266773],
 [125000, 4108.464963824286], [130000, 4716.65607578992], [135000, 5468.333194265662],
 [140000, 6004.469390438909], [145000, 6170.675600873497]
])

### J2 Bias offset
Q1[:, 0] = (Q1[:, 0])/1000
Q2[:, 0] = (Q2[:, 0])/1000
Q4[:, 0] = (Q4[:, 0])/1000

# plt.plot(Q1[:, 0], Q1[:, 1], label='Q1')
# plt.plot(Q2[:, 0], Q2[:, 1], label='Q2')
# plt.plot(Q4[:, 0], Q4[:, 1], label='Q4')
# plt.xlabel('J2 Bias (mDAC)')
# plt.ylabel('QPT (Hz)')
# plt.yscale('log')
# plt.grid()
# plt.legend()
# plt.draw()
# plt.show()

plt.plot(Q1[:, 0]*4.8, Q1[:, 1], 'b', label='Q1')
plt.plot(Q2[:, 0]*4.8, Q2[:, 1], 'r', label='Q2')
plt.plot(Q4[:, 0]*4.8, Q4[:, 1], 'y', label='Q4')
plt.xlabel('J2 Bias (GHz)')
plt.ylabel('QPT (Hz)')
plt.yscale('log')
plt.grid()
plt.legend()
plt.draw()
plt.show()
