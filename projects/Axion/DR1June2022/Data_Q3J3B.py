from datetime import datetime
from scipy import signal
from dataChest import *
import os
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

biases_data= [-0.12999999999999992, -0.11999999999999991, -0.1099999999999999, -0.0999999999999999, -0.08999999999999989, -0.07999999999999988, -0.06999999999999987, -0.05999999999999986, -0.04999999999999985, -0.03999999999999984, -0.029999999999999832, -0.019999999999999823, -0.009999999999999815, 1.942890293094024e-16, 0.010000000000000203, 0.020000000000000212, 0.03000000000000022, 0.04000000000000023, 0.05000000000000024, 0.06000000000000025, 0.07000000000000026, 0.08000000000000027, 0.09000000000000027, 0.10000000000000028, 0.11000000000000029, 0.1200000000000003, 0.1300000000000003, 0.14000000000000032, 0.15000000000000033, 0.16000000000000034, 0.17000000000000035, 0.18000000000000035, 0.19000000000000036, 0.20000000000000037, 0.21000000000000038, 0.2200000000000004, 0.2300000000000004, 0.2400000000000004, 0.25000000000000044, 0.26000000000000045, 0.27000000000000046, 0.28000000000000047, 0.2900000000000005, 0.3000000000000005, 0.3100000000000005, 0.3200000000000005, -0.06, -0.057999999999999996, -0.055999999999999994, -0.05399999999999999, -0.05199999999999999, -0.04999999999999999, -0.04799999999999999, -0.045999999999999985, -0.043999999999999984, -0.04199999999999998, -0.03999999999999998, -0.03799999999999998, -0.035999999999999976, -0.033999999999999975, -0.03199999999999997, -0.02999999999999997, -0.02799999999999997, -0.025999999999999968, -0.023999999999999966, -0.021999999999999964, -0.019999999999999962, -0.01799999999999996, -0.01599999999999996, -0.013999999999999957, -0.011999999999999955, -0.009999999999999953, -0.007999999999999952, -0.00599999999999995, -0.003999999999999948, -0.0019999999999999463, 5.551115123125783e-17, 0.0020000000000000573, 0.004000000000000059, 0.006000000000000061, 0.008000000000000063, 0.010000000000000064, 0.012000000000000066, 0.014000000000000068, 0.01600000000000007, 0.01800000000000007, 0.020000000000000073, 0.022000000000000075, 0.024000000000000077, 0.02600000000000008, 0.02800000000000008, 0.030000000000000082, 0.032000000000000084, 0.034000000000000086, 0.03600000000000009, 0.03800000000000009, 0.04000000000000009, 0.04200000000000009, 0.044000000000000095, 0.046000000000000096, 0.0480000000000001, 0.0500000000000001, 0.0520000000000001, 0.054000000000000103, 0.056000000000000105, 0.05800000000000011, 0.06000000000000011, 0.06200000000000011, 0.06400000000000011, 0.06600000000000011, 0.06800000000000012, 0.07000000000000012, 0.07200000000000012, 0.07400000000000012, 0.07600000000000012, 0.07800000000000012, 0.08, 0.082, 0.084, 0.08600000000000001, 0.08800000000000001, 0.09000000000000001, 0.09200000000000001, 0.09400000000000001, 0.09600000000000002, 0.09800000000000002, 0.10000000000000002, 0.10200000000000002, 0.10400000000000002, 0.10600000000000002, 0.10800000000000003, 0.11000000000000003, 0.11200000000000003, 0.11400000000000003, 0.11600000000000003, 0.11800000000000004, 0.12000000000000004, 0.12200000000000004, 0.12400000000000004, 0.12600000000000006, 0.12800000000000006, 0.13000000000000006, 0.13200000000000006, 0.13400000000000006, 0.13600000000000007, 0.13800000000000007, 0.14000000000000007, 0.14200000000000007, 0.14400000000000007, 0.14600000000000007, 0.14800000000000008, 0.15000000000000008, 0.15200000000000008, 0.15400000000000008, 0.15600000000000008, 0.15800000000000008, 0.1600000000000001, 0.1620000000000001, 0.1640000000000001, 0.1660000000000001, 0.1680000000000001, 0.1700000000000001, 0.1720000000000001, 0.1740000000000001, 0.1760000000000001, 0.1780000000000001, 0.1800000000000001]
parity_rate_data = [3465.5511402160423, 3196.4110576922108, 2850.127043318708, 2578.921301117583, 2236.728294259621, 2024.1128473876593, 1762.9453726141553, 1498.019110258851, 1303.5541183863218, 1147.0533155682572, 994.0333129954931, 1021.8340725022621, 821.1876366362624, 742.981531808372, 726.6077722647533, 772.6767073698563, 1163.4436249354726, 1262.6100687094029, 508.39840744580795, 483.83475658839075, 506.0384093268926, 805.8575877629627, 1649.0529322547038, 795.2466585763556, 798.7028924267345, 692.6254934807625, 761.027560235229, 903.4683129774652, 1035.7522317388111, 1051.71145362369, 1238.880484074182, 1407.5078596210901, 1640.4402993329957, 1857.5285950650193, 2060.6773133630954, 2350.2851920774833, 2628.6134232886084, 2909.1421433497726, 3113.892538442595, 3403.882568824956, 3680.2999771419186, 3927.4873558683744, 4112.130156140904, 4158.854751309163, 4312.514399128029, 4410.880061883693, 1503.4049225978868, 1433.6009906380314, 1418.5292536033603, 1355.1620779656164, 1315.8044708107266, 1263.6458298735267, 1257.7941212905077, 1207.9690380306124, 1166.2692562409375, 1158.9294330088455, 1087.9849383554642, 1114.3325285263913, 1064.2323096126904, 1000.2104555348128, 971.8002467080723, 978.0244112873273, 997.9643287068917, 1027.383007261129, 1055.0860447289024, 1038.4136642884246, 1004.3180504797842, 929.432629483866, 891.6807059167853, 841.5952150199008, 807.9438882556304, 782.2365958248175, 763.3544101660347, 740.4469787351663, 749.0223084090455, 762.0212172449715, 730.4686321892649, 743.4392155350174, 728.5851810324548, 715.4169034868703, 720.539361803229, 747.3384309344691, 776.2341873111393, 778.5046743856285, 808.216487446979, 792.5096440786317, 781.298813214227, 765.0462483170129, 749.4083544297706, 790.1905262247523, 890.0059541055037, 1167.4005332491615, 1394.3302641096386, 1656.6423168998685, 1767.962401280482, 1580.0581985873355, 1295.4116050047578, 1169.2846651713878, 834.7602357301163, 644.3988844901469, 547.8146332394247, 522.7106594152503, 479.6883504650974, 494.6565183002769, 486.1702171470734, 499.0531047283784, 485.18630048030394, 493.988141889473, 447.572000441338, 119.79449508000795, 10.00123966970478, 369.83073035247753, 11.070286984027055, 512.096761181912, 544.4275564305727, 602.0342082206764, 1170.6597011527565, 5546.044371541931, 2095.550276994147, 2157.9165312481714, 1953.329522942885, 1842.1228010203715, 1538.5067570373346, 1255.2732034353842, 1045.1245735939585, 954.0800702323089, 906.6695298854949, 884.8076275559124, 832.608846472182, 852.8716085135849, 857.6277996219218, 874.199133656164, 830.383917862671, 813.3221969004494, 760.2466362277318, 788.6510222719905, 778.191234852396, 789.0347756813106, 808.3782943477495, 888.2778979502096, 878.2622879559844, 852.9412870875317, 846.6643219740035, 848.5184247574067, 886.9414437293304, 905.3176910855173, 952.941219404744, 1022.2158392584997, 1104.51414948592, 1142.4263634054917, 1177.0325938732537, 1167.927191247653, 1137.593123128206, 1132.4001326248301, 1152.1286060226219, 1170.4120322823642, 1273.241046023549, 1354.256722946742, 1611.1625697082322, 1832.6496297635608, 5600.949802525727, 5121.775077809365, 1950.814552108823, 1948.9724454698874, 1563.4597132636984, 1562.4891436864852, 1645.4162485923973]

# biases_data=
# parity_raate_data=

biases=[]
parity_rate=[]
for i in range(len(parity_rate_data)):
    if parity_rate_data[i] < 5000 and parity_rate_data[i] > 0:
        biases.append(biases_data[i])
        parity_rate.append(parity_rate_data[i])

plt.title('Parity Rate vs Radiator Bias')
# plt.plot(4*times, np.abs(I + Q * 1j))
plt.semilogy([np.abs(b-0.062)*(490)*(0.02)*484 for b in biases], parity_rate,marker='.',linestyle='None')
plt.grid(which='both')
plt.ylim(4e2,2e3)
plt.xlim(0,500)
# plt.xlabel('Radiator Bias (mV)')
plt.xlabel('Radiator Frequency (GHz)')
plt.ylabel('Parity Rate (Hz)')
plt.pause(0.1)


