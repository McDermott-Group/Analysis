from datetime import datetime
from scipy import signal
from dataChest import *
import os
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
import matplotlib
matplotlib.use('TkAgg')

# Z:\mcdermott-group\data\Axion\2022-09-22 - DR2\DCH\Axion3A\09-29-22\PSD_Q1_J1B_Retightened
biases_data = [0.06370000000000021, -0.17149999999999999, -0.0734999999999999, 0.009800000000000171, -0.0783999999999999, -0.07864499999999991, -0.00024499999999983704, -0.0636999999999999, 0.0392000000000002, -0.053899999999999886, -0.0051449999999998415, 0.06345500000000022, -0.05879999999999989, -0.024744999999999857, 0.01960000000000018, 0.014700000000000176, -0.0685999999999999, -0.029399999999999864, -0.06394499999999989, -0.15679999999999997, -0.05904499999999989, 0.0441000000000002, 0.09310000000000024, 0.024500000000000185, -0.019599999999999854, 0.03430000000000019, 0.0490000000000002, -0.02449999999999986, -0.004899999999999841, -0.07374499999999991, 0.01935500000000018, -0.019844999999999852, 0.05390000000000021, 0.06835500000000022, -0.03944499999999987, -0.034299999999999865, 0.024255000000000183, 1.63202784619898e-16, -0.03454499999999987, -0.04924499999999988, -0.014944999999999849, -0.010044999999999846, -0.039199999999999874, -0.044099999999999875, -0.06884499999999989, -0.009799999999999845, 0.02940000000000019]
parity_rate_data = [3702.096926395348, 4205.771668705031, 2891.1256163326893, 2088.1141320117626, 3214.402036966062, 3204.313753941616, 2014.378308302974, 2449.807384654262, 2735.2273283716677, 2195.4368786362998, 2004.4111670389314, 3701.021205632504, 2800.33032786413, 2104.855158369566, 2186.341484492292, 2130.05178530524, 2407.240277446773, 2059.0207800728695, 2333.8692212661495, 4168.2534013772965, 2664.3491384581034, 2443.5569331283414, 1301.7880678828944, 2094.4289900231843, 2018.4112746357084, 2154.380149076864, 2535.4014352864942, 2126.8350353707438, 2145.7006132307206, 2810.4337382732156, 2164.247070663633, 1995.2136087796505, 2628.4558317522437, 3808.4238611646406, 2114.4453486444822, 2137.1981159298325,6066.008041859318, 2003.3184946879549, 2031.3172280283677, 2131.398230827112, 1994.8084021722866, 1961.7788802628963, 2021.4142258729803, 2205.5890704069607, 2462.490530498433, 2179.1755709052413, 2200.176981807208]

biases=[]
parity_rate=[]
for i in range(len(parity_rate_data)):
    if parity_rate_data[i] <= 9000 and parity_rate_data[i] > 800:
        biases.append(biases_data[i])
        parity_rate.append(parity_rate_data[i])

plt.title('Parity Rate vs Radiator Bias')
# plt.plot(4*times, np.abs(I + Q * 1j))
plt.semilogy([b*2*484*10 for b in biases], parity_rate,marker='o',markersize=6,linestyle='None',color='r')

plt.grid(which='both')
plt.ylim(0.8e3,9e3)
#plt.xlim(-600,600)
# plt.xlabel('Radiator Bias (mV)')
plt.xlabel('Radiator Bias (mV)')
plt.ylabel('Parity Rate (Hz)')
plt.pause(0.1)

